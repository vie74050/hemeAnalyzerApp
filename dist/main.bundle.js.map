{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://heme-anallyzer-app/./src/Data/GetGSheetsData.ts","webpack://heme-anallyzer-app/./src/Graph/UICreateLineGraph.ts","webpack://heme-anallyzer-app/./src/Graph/UICreateQCFileTable.ts","webpack://heme-anallyzer-app/./src/tests/UICreateQCFileTableTest.ts","webpack://heme-anallyzer-app/./src/tests/index.ts","webpack://heme-anallyzer-app/./node_modules/@kurkle/color/dist/color.cjs","webpack://heme-anallyzer-app/./node_modules/chart.js/auto/auto.cjs","webpack://heme-anallyzer-app/./node_modules/chart.js/dist/chart.cjs","webpack://heme-anallyzer-app/./node_modules/chart.js/dist/chunks/helpers.segment.cjs","webpack://heme-anallyzer-app/webpack/bootstrap","webpack://heme-anallyzer-app/webpack/runtime/make namespace object","webpack://heme-anallyzer-app/./src/index.ts"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GetData = void 0;\r\n// Default google worksheet id\r\nvar spreadsheetId = \"1QCDTOlikbl3E0CjCcmjNOfPrl1veu1C1j6tBtlXKI_o\";\r\n// Default sheet name(s) within worksheet \r\nvar sheetname = 'SampleData';\r\nvar DATA;\r\n/** Load sheet data from specified google sheet.\r\n * If _GET params are passed in URL, they override the Defaults.\r\n * - require API_KEY in ./.envs to be set\r\n*/\r\nfunction LoadGSheetsData() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        // get credentials from .env using dot-env\r\n        const apiKey = process.env.API_KEY;\r\n        // the google worksheet id\r\n        const get_id = findGetParameters('id');\r\n        // the sheet name(s) within worksheet \r\n        const get_name = findGetParameters('name');\r\n        let data;\r\n        // _GET param overrides defaults\r\n        if (get_id.length > 0)\r\n            spreadsheetId = findGetParameters('id');\r\n        if (get_name.length > 0)\r\n            sheetname = findGetParameters('name');\r\n        if (!apiKey) {\r\n            console.error('app key error');\r\n            process.exit(1);\r\n        }\r\n        else {\r\n            try {\r\n                const response = yield fetch(`https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}/values/${sheetname}?key=${apiKey}`);\r\n                data = yield response.json();\r\n                DATA = parseData(data);\r\n                return DATA;\r\n            }\r\n            catch (e) {\r\n                console.error(\"Error fetching spreadsheet data:\", e, sheetname, spreadsheetId);\r\n                return null;\r\n            }\r\n        }\r\n    });\r\n}\r\n/** Get set up parameters from _GET\r\n * @param {string} key param name to get\r\n * @returns {string} value where key matches paramName\r\n */\r\nfunction findGetParameters(key = '') {\r\n    var result = '';\r\n    location.search\r\n        .substring(1)\r\n        .split(\"&\")\r\n        .forEach(function (item) {\r\n        let tmp = item.split('=');\r\n        if ((key == '' || key == tmp[0]) && tmp[0] != '') {\r\n            result = tmp[1];\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/** Parses data to rows\r\n * @param data Incoming data returned from Google Sheets API\r\n * @returns Rocord<string, string>[] Array of rows with headers as key\r\n */\r\nfunction parseData(data) {\r\n    const rows = [];\r\n    const rawRows = data.values || [[]];\r\n    const headers = rawRows.shift() || [];\r\n    for (const row of rawRows) {\r\n        const rowData = row.reduce((acc, cell, index) => {\r\n            acc[headers[index]] = cell;\r\n            return acc;\r\n        }, {});\r\n        rows.push(rowData);\r\n    }\r\n    return rows;\r\n}\r\nfunction GetData() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (DATA === undefined) {\r\n            let data = yield LoadGSheetsData();\r\n            return data;\r\n        }\r\n        else {\r\n            return DATA;\r\n        }\r\n    });\r\n}\r\nexports.GetData = GetData;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineGraph = void 0;\r\nconst auto_1 = __importDefault(require(\"chart.js/auto\"));\r\n/**\r\n * Creates a line graph row and addes to the graphscontainer element.\r\n * @param chartData data for the chart\r\n * @param graphscontainerID id of the container element, default is 'graphscontainer'\r\n */\r\nclass LineGraph {\r\n    constructor(chartData, graphscontainerID = 'graphscontainer') {\r\n        this.data = chartData;\r\n        let container = document.getElementById(graphscontainerID);\r\n        if (!container) {\r\n            console.error('Graphs container not found.');\r\n        }\r\n        const row = this.UICreateGraphRowHTML(chartData.canvasId);\r\n        container.appendChild(row);\r\n        this.canvas = row.querySelector('canvas');\r\n        this.chart = this.CreateLineChart(chartData);\r\n        this.titleHTML = row.querySelector('._yTitle');\r\n        this.stat_avgHTML = row.querySelector('._avg');\r\n        this.stat_curHTML = row.querySelector('._cur');\r\n        this.stat_sdHTML = row.querySelector('._sd');\r\n        this.stat_cvHTML = row.querySelector('._cv');\r\n    }\r\n    /** Create HTML elements for .graphrow with the structure\r\n     *  <div class=\"graphrow\">\r\n            <div class=\"_yTitle\"></div>\r\n            <div class=\"graph\"><canvas id=\"{{graphid}}\"></canvas></div>\r\n            <div class=\"dataSummary\">\r\n            </div>\r\n        </div>\r\n     */\r\n    UICreateGraphRowHTML(graphId) {\r\n        const graphRow = document.createElement('div');\r\n        graphRow.classList.add('graphrow');\r\n        const titleCol = document.createElement('div');\r\n        const yTitle = document.createElement('div');\r\n        yTitle.classList.add('_yTitle', 'ytitle');\r\n        yTitle.innerHTML = this.data.yTitle;\r\n        titleCol.classList.add('titleCol');\r\n        titleCol.appendChild(yTitle);\r\n        graphRow.appendChild(titleCol);\r\n        const graph = document.createElement('div');\r\n        graph.classList.add('graph');\r\n        graphRow.appendChild(graph);\r\n        const canvas = document.createElement('canvas');\r\n        canvas.setAttribute('id', graphId);\r\n        graph.appendChild(canvas);\r\n        const dataSummary = document.createElement('div');\r\n        dataSummary.classList.add('dataSummary');\r\n        graphRow.appendChild(dataSummary);\r\n        const table = document.createElement('table');\r\n        dataSummary.appendChild(table);\r\n        table.appendChild(this.UICreateDataStatsTableHTML());\r\n        return graphRow;\r\n    }\r\n    /** Create HTML for table for statistics, with the structure:\r\n     *  <table>\r\n            <tr>\r\n                <td class=\"_cur\" rowspan=\"3\"></td>\r\n                <td class=\"_sd\"></td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"_avg\"></td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"_cv\"></td>\r\n            </tr>\r\n        </table>\r\n     */\r\n    UICreateDataStatsTableHTML() {\r\n        const table = document.createElement('table');\r\n        const tr1 = document.createElement('tr');\r\n        const td1 = document.createElement('td');\r\n        td1.classList.add('_cur');\r\n        td1.setAttribute('rowspan', '3');\r\n        tr1.appendChild(td1);\r\n        const td2 = document.createElement('td');\r\n        td2.classList.add('_sd');\r\n        tr1.appendChild(td2);\r\n        table.appendChild(tr1);\r\n        const tr2 = document.createElement('tr');\r\n        const td3 = document.createElement('td');\r\n        td3.classList.add('_avg');\r\n        tr2.appendChild(td3);\r\n        table.appendChild(tr2);\r\n        const tr3 = document.createElement('tr');\r\n        const td4 = document.createElement('td');\r\n        td4.classList.add('_cv');\r\n        tr3.appendChild(td4);\r\n        table.appendChild(tr3);\r\n        return table;\r\n    }\r\n    /** Create a line graph with chartjs\r\n     * @param canvasId id of the canvas element\r\n     * @param yMin minimum value of the y-axis\r\n     * @param yMax maximum value of the y-axis\r\n     * @param xData array of x-values\r\n     * @param yData array of y-values\r\n    */\r\n    CreateLineChart(chartData) {\r\n        const yMin = chartData.yMin, yMax = chartData.yMax, xData = chartData.xData, yData = chartData.yData;\r\n        const canvas = this.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        if (!ctx) {\r\n            console.error('Canvas context not supported.');\r\n            return;\r\n        }\r\n        const target = (yMax + yMin) / 2;\r\n        const data = {\r\n            labels: xData,\r\n            datasets: [{\r\n                    data: yData.map((v, i) => (v < yMin ? yMin : v > yMax ? yMax : v)),\r\n                    pointBackgroundColor: function (context) {\r\n                        // draw outofbounds values in red \r\n                        var value = yData[context.dataIndex];\r\n                        return value < yMin || value > yMax ? 'red' : 'green';\r\n                    },\r\n                    pointStyle: function (context) {\r\n                        // draw outofbounds values as a rotated rectangle\r\n                        var value = yData[context.dataIndex];\r\n                        return value < yMin || value > yMax ? 'rectRot' : 'rect';\r\n                    }\r\n                }]\r\n        };\r\n        auto_1.default.defaults.plugins.legend.display = false;\r\n        auto_1.default.defaults.elements.line.borderWidth = 1;\r\n        auto_1.default.defaults.maintainAspectRatio = false;\r\n        auto_1.default.defaults.elements.point.hitRadius = 2;\r\n        auto_1.default.defaults.elements.point.radius = 5;\r\n        const chart = new auto_1.default(ctx, {\r\n            type: 'line',\r\n            data: data,\r\n            options: {\r\n                scales: {\r\n                    x: {\r\n                        ticks: {\r\n                            display: false //this will remove only the label\r\n                        }\r\n                    },\r\n                    y: {\r\n                        title: { display: false },\r\n                        min: yMin,\r\n                        max: yMax,\r\n                        offset: true,\r\n                        alignToPixels: true,\r\n                        backgroundColor: 'rgba(220, 250, 250, 0.5)',\r\n                        ticks: {\r\n                            stepSize: target,\r\n                            major: {\r\n                                enabled: true\r\n                            },\r\n                            padding: 0,\r\n                            callback: function (val, index) {\r\n                                const targW = 40;\r\n                                // ensure y tick labels are same width so graphs align\r\n                                let num = Number(val).toFixed(1).trim();\r\n                                let w = ctx.measureText(num).width;\r\n                                while (w < targW) {\r\n                                    num = num + ' ';\r\n                                    w = ctx.measureText(num).width;\r\n                                }\r\n                                return num;\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                interaction: {\r\n                    mode: 'point'\r\n                },\r\n                plugins: {\r\n                    tooltip: {\r\n                        callbacks: {\r\n                            label: function (context) {\r\n                                return yData[context.dataIndex].toString();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return chart;\r\n    }\r\n    // helper math functions\r\n    getMean(array) {\r\n        const n = array.length;\r\n        return array.reduce((a, b) => a + b) / n;\r\n    }\r\n    getStandardDeviation(array) {\r\n        const n = array.length;\r\n        const mean = this.getMean(array);\r\n        return Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\r\n    }\r\n    getCV(array) {\r\n        const mean = this.getMean(array);\r\n        const sd = this.getStandardDeviation(array);\r\n        return sd / mean;\r\n    }\r\n    /** Update the data summary table with the current, average and coefficient of variation values */\r\n    uiUpdateDataSummaryTable(currVal) {\r\n        var newdata = this.data.yData;\r\n        this.stat_avgHTML.innerText = this.getMean(newdata).toFixed(1);\r\n        this.stat_curHTML.innerText = currVal.toFixed(1);\r\n        this.stat_sdHTML.innerText = this.getStandardDeviation(newdata).toFixed(1);\r\n        this.stat_cvHTML.innerText = this.getCV(newdata).toFixed(1);\r\n    }\r\n    /** Update the data summary table with the current, average and coefficient of variation values */\r\n    AddDataPoint(xData = '', v = -1) {\r\n        const chart = this.chart;\r\n        // newy - the value that is plotted on the chart if out of range\r\n        const newy = v < this.data.yMin ? this.data.yMin : v > this.data.yMax ? this.data.yMax : v;\r\n        if (xData.length > 0) {\r\n            this.data.yData.push(v);\r\n            this.data.xData.push(xData);\r\n            chart.data.labels.push(xData);\r\n            chart.data.datasets[0].data.push(newy);\r\n            chart.update();\r\n        }\r\n        this.uiUpdateDataSummaryTable(v);\r\n    }\r\n}\r\nexports.LineGraph = LineGraph;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.UICreateQCFileTable = exports.GraphQCFile = void 0;\r\nconst UICreateLineGraph_1 = require(\"../Graph/UICreateLineGraph\");\r\nconst GetGSheetsData_1 = require(\"../Data/GetGSheetsData\");\r\nvar graphscontainerID = 'graphscontainer';\r\nlet container = document.getElementById(graphscontainerID);\r\nif (!container) {\r\n    console.error('Graphs container not found.');\r\n}\r\n/** Creates Table of Graphs for parameters of itemid  */\r\nfunction GraphQCFile(itemid = 'QC-002') {\r\n    const subgroup = 'HAParameter';\r\n    let data = (0, GetGSheetsData_1.GetData)();\r\n    data.then((data) => {\r\n        document.getElementById('graphscontainer').innerHTML = \"\";\r\n        if (data !== null) {\r\n            // filter data for the first Item = itemid\r\n            let parentItem = data.find((item) => item['Item'] === itemid);\r\n            let analysisdates = parentItem['Analysis dates -->'];\r\n            let xData = analysisdates.split(';');\r\n            // filter data for items that have Groups= itemid and subgroup = 'HA Praameter'\r\n            let paramerterData = data.filter((item) => {\r\n                return item['Groups'] === itemid && item['Subgroup'] === subgroup;\r\n            });\r\n            // for each parameterData, create new LineGraph\r\n            paramerterData.forEach((item) => {\r\n                const id = item['Item'].toLowerCase().replace(/[^A-Z0-9]/ig, '');\r\n                const yData = xData.map((s, i) => {\r\n                    let dateHeader = 'Date' + (i + 1);\r\n                    return Number(item[dateHeader]);\r\n                });\r\n                const yTitle = item['Label'].length > 0 ? item['Label'] : item['Item'];\r\n                const yMin = Number(item['AllowedMin']);\r\n                const yMax = Number(item['AllowedMax']); //console.log(yData);\r\n                const chartData = {\r\n                    canvasId: id,\r\n                    xData: xData,\r\n                    yData: yData,\r\n                    yTitle: yTitle,\r\n                    yMin: yMin,\r\n                    yMax: yMax\r\n                };\r\n                const chart = new UICreateLineGraph_1.LineGraph(chartData);\r\n                chart.AddDataPoint();\r\n            });\r\n        }\r\n    });\r\n}\r\nexports.GraphQCFile = GraphQCFile;\r\n/** Create HTMLs Table from GetData where Groups=\"QCSample\"\r\n * Headers: File, Lot#, Material, Exp. Date, Analysis dates\r\n * File: autogenerated line number\r\n * Lot#: Label or Item\r\n * Material: Description\r\n*/\r\nfunction UICreateQCFileTable() {\r\n    const maxRows = 100;\r\n    const data = (0, GetGSheetsData_1.GetData)();\r\n    // create table\r\n    const table = document.createElement('table');\r\n    table.setAttribute('id', 'qcfiletable');\r\n    table.setAttribute('class', 'table');\r\n    // create table header\r\n    const thead = document.createElement('thead');\r\n    const tr = document.createElement('tr');\r\n    thead.appendChild(tr);\r\n    table.appendChild(thead);\r\n    const tbody = document.createElement('tbody');\r\n    table.appendChild(tbody);\r\n    const th1 = document.createElement('th');\r\n    th1.innerText = 'File';\r\n    const th2 = document.createElement('th');\r\n    th2.innerText = 'Lot#';\r\n    const thlast = document.createElement('th');\r\n    thlast.innerText = 'Analysis Date';\r\n    tr.appendChild(th1);\r\n    tr.appendChild(th2);\r\n    console.log(data);\r\n    data.then((data) => {\r\n        if (data !== null) {\r\n            // filter data for items that have Groups=\"QCSample\"\r\n            let sampleData = data.filter((row) => {\r\n                return row['Groups'] === 'QCSample';\r\n            });\r\n            // create th for each Subgroup=SampleInfo unique value of Item\r\n            let sampleInfo = data.filter((row) => row['Subgroup'] === 'SampleInfo').map((row) => row['Item']);\r\n            let headingInfoUnique = [...new Set(sampleInfo)];\r\n            headingInfoUnique.forEach((item) => {\r\n                let th = document.createElement('th');\r\n                th.innerText = item;\r\n                tr.appendChild(th);\r\n            });\r\n            tr.appendChild(thlast);\r\n            // create row for each sampleData where \r\n            // td1 = autogenerated line number\r\n            // td2 = Label or Item\r\n            // td(n) = lookup data Description where subgroup=SampleInfo, Groups=Item, Item=headingInfoUnique\r\n            // td(last) = last column is the item's most recent analysis date\r\n            sampleData.forEach((item, i) => {\r\n                let id = item['Item'].toLowerCase().replace(/[^A-Z0-9]/ig, '');\r\n                let tr = document.createElement('tr');\r\n                tbody.appendChild(tr);\r\n                let td1 = document.createElement('td');\r\n                let td1text = \"QC\" + (i + 1).toString().padStart(maxRows.toString().length, '0');\r\n                td1.innerText = td1text;\r\n                tr.appendChild(td1);\r\n                let td2 = document.createElement('td');\r\n                td2.innerText = item['Label'].length > 0 ? item['Label'] : item['Item'];\r\n                tr.appendChild(td2);\r\n                // create td(n) from each headingInfoUnique\r\n                headingInfoUnique.forEach((heading) => {\r\n                    let td = document.createElement('td');\r\n                    let coldata = data.find((row) => {\r\n                        let ret = row['Subgroup'] === 'SampleInfo' && row['Groups'] === item['Item'] && row['Item'] === heading;\r\n                        return ret;\r\n                    });\r\n                    td.innerText = coldata ? coldata['Description'] : 'not found';\r\n                    tr.setAttribute('id', id);\r\n                    tr.appendChild(td);\r\n                });\r\n                // create td(last) for most recent analysis date\r\n                let tdlast = document.createElement('td');\r\n                let analysisdates = item['Analysis dates -->'];\r\n                let analysisdatesArray = analysisdates.split(';');\r\n                tdlast.innerText = analysisdatesArray[analysisdatesArray.length - 1];\r\n                tr.appendChild(tdlast);\r\n                // add click event to each row\r\n                tr.addEventListener('click', function () {\r\n                    var _a;\r\n                    GraphQCFile(item['Item']);\r\n                    // hide table\r\n                    table.style.display = 'none';\r\n                    // add back button that shows table\r\n                    const backbutton = document.createElement('button'); // create button element\r\n                    backbutton.innerText = \"Back\"; // set button text\r\n                    backbutton.addEventListener('click', function () {\r\n                        var _a;\r\n                        table.style.display = 'table';\r\n                        document.getElementById('graphscontainer').innerHTML = \"\";\r\n                        (_a = document.getElementById('top-menu')) === null || _a === void 0 ? void 0 : _a.removeChild(backbutton);\r\n                    });\r\n                    (_a = document.getElementById('top-menu')) === null || _a === void 0 ? void 0 : _a.appendChild(backbutton);\r\n                });\r\n            });\r\n        }\r\n    });\r\n    return table;\r\n}\r\nexports.UICreateQCFileTable = UICreateQCFileTable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UICreateQCFileTable_1 = require(\"../Graph/UICreateQCFileTable\");\r\nfunction GraphQCFileTest() {\r\n    var _a, _b;\r\n    // create button element and add to #top-menu\r\n    const button1 = document.createElement('button'); // create button element \r\n    button1.innerText = \"QC-001\"; // set button text\r\n    button1.addEventListener('click', function () {\r\n        (0, UICreateQCFileTable_1.GraphQCFile)(button1.innerText);\r\n    });\r\n    (_a = document.getElementById('top-menu')) === null || _a === void 0 ? void 0 : _a.appendChild(button1); // add button to top-menu\r\n    const button2 = document.createElement('button'); // create button element \r\n    button2.innerText = \"QC-002\"; // set button text\r\n    button2.addEventListener('click', function () {\r\n        (0, UICreateQCFileTable_1.GraphQCFile)(button2.innerText);\r\n    });\r\n    (_b = document.getElementById('top-menu')) === null || _b === void 0 ? void 0 : _b.appendChild(button2); // add button to top-menu\r\n}\r\nfunction UICreateQCFileTableTest(parentContainerID) {\r\n    const parent = document.getElementById(parentContainerID);\r\n    const table = (0, UICreateQCFileTable_1.UICreateQCFileTable)();\r\n    parent === null || parent === void 0 ? void 0 : parent.appendChild(table);\r\n}\r\n;\r\nUICreateQCFileTableTest('content');\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//import './GetGSheetsDataTest';\r\n//import './UICreateLineGraphTest';\r\nrequire(\"./UICreateQCFileTableTest\");\r\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global[\"@kurkle/color\"] = factory());\n})(this, (function () { 'use strict';\n\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nvar color = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColor: Color,\ndefault: index_esm,\nround: round,\nlim: lim,\np2b: p2b,\nb2p: b2p,\nn2b: n2b,\nb2n: b2n,\nn2p: n2p,\nhexParse: hexParse,\nhexString: hexString,\nrgb2hsl: rgb2hsl,\nhsl2rgb: hsl2rgb,\nhwb2rgb: hwb2rgb,\nhsv2rgb: hsv2rgb,\nhueParse: hueParse,\nrotate: rotate,\nhslString: hslString,\nnameParse: nameParse,\nrgbParse: rgbParse,\nrgbString: rgbString\n});\n\nvar index = Object.assign(index_esm, color);\n\nreturn index;\n\n}));\n","const chartjs = require('../dist/chart.cjs');\nconst {Chart, registerables} = chartjs;\n\nChart.register(...registerables);\n\nmodule.exports = Object.assign(Chart, chartjs);\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\n'use strict';\n\nvar helpers_segment = require('./chunks/helpers.segment.cjs');\nrequire('@kurkle/color');\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = helpers_segment.requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = helpers_segment.color(from || transparent);\n        const c1 = c0.valid && helpers_segment.color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = helpers_segment.resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = helpers_segment.resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = helpers_segment.effects[cfg.easing] || helpers_segment.effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = helpers_segment.resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = helpers_segment.resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!helpers_segment.isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(helpers_segment.defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!helpers_segment.isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (helpers_segment.isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (helpers_segment.isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (helpers_segment.isNumberFinite(otherValue) && (singleMode || value === 0 || helpers_segment.sign(value) === helpers_segment.sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return helpers_segment.createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return helpers_segment.createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = helpers_segment.valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = helpers_segment.valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = helpers_segment.valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            helpers_segment.unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (helpers_segment.isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                helpers_segment.unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                helpers_segment.listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (helpers_segment.isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (helpers_segment.isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(helpers_segment.resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(helpers_segment.resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !helpers_segment.isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (helpers_segment.isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(helpers_segment.valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && helpers_segment.defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(helpers_segment.defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = helpers_segment._arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (helpers_segment.defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (helpers_segment.isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (helpers_segment.isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return helpers_segment.sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(helpers_segment.resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(helpers_segment.resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || helpers_segment.isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (helpers_segment.isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && helpers_segment.sign(value) !== helpers_segment.sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !helpers_segment.isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = helpers_segment.sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = helpers_segment.valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = helpers_segment.valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = helpers_segment.valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += helpers_segment.valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < helpers_segment.TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>helpers_segment._angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>helpers_segment._angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(helpers_segment.HALF_PI, startY, endY);\n        const minX = calcMin(helpers_segment.PI, startX, endX);\n        const minY = calcMin(helpers_segment.PI + helpers_segment.HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (helpers_segment.isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+helpers_segment.resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return helpers_segment.toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return helpers_segment.toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = helpers_segment.TAU;\n        let max = -helpers_segment.TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(helpers_segment.toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = helpers_segment.toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / helpers_segment.TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return helpers_segment.TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = helpers_segment.formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(helpers_segment.valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = helpers_segment._getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (helpers_segment._scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = helpers_segment.isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = helpers_segment.isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = helpers_segment.formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return helpers_segment._parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * helpers_segment.PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? helpers_segment.toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return helpers_segment._parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = helpers_segment._getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (helpers_segment._scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = helpers_segment.isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = helpers_segment.isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? helpers_segment._rlookupByKey : helpers_segment._lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !helpers_segment._isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = helpers_segment.getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (helpers_segment._angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!helpers_segment.isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (helpers_segment.defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (helpers_segment.defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = helpers_segment.toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        helpers_segment.each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, helpers_segment.toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        helpers_segment.each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = helpers_segment.readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = helpers_segment.readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = helpers_segment.supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = helpers_segment.getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && helpers_segment._getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = helpers_segment.throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = helpers_segment.throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (helpers_segment.isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return helpers_segment.getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = helpers_segment._getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!helpers_segment._isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return helpers_segment.isNumber(this.x) && helpers_segment.isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, helpers_segment.isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, helpers_segment.isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = helpers_segment._factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = helpers_segment.valueOrDefault(majorStart, 0);\n    const end = Math.min(helpers_segment.valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    helpers_segment.each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = helpers_segment.toFont(options.font, fallback);\n    const padding = helpers_segment.toPadding(options.padding);\n    const lines = helpers_segment.isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return helpers_segment.createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return helpers_segment.createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = helpers_segment._toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = helpers_segment._alignStartEnd(align, left, right);\n        if (helpers_segment.isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (helpers_segment.isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = helpers_segment._alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -helpers_segment.HALF_PI : helpers_segment.HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = helpers_segment.finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = helpers_segment.finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = helpers_segment.finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = helpers_segment.finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: helpers_segment.finiteOrDefault(_userMin, _suggestedMin),\n            max: helpers_segment.finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: helpers_segment.isNumberFinite(_userMin),\n            maxDefined: helpers_segment.isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: helpers_segment.finiteOrDefault(min, helpers_segment.finiteOrDefault(max, min)),\n            max: helpers_segment.finiteOrDefault(max, helpers_segment.finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        helpers_segment.callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = helpers_segment._addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        helpers_segment.callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        helpers_segment.callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        helpers_segment.callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        helpers_segment.callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        helpers_segment.callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = helpers_segment.callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        helpers_segment.callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        helpers_segment.callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = helpers_segment._limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = helpers_segment.toDegrees(Math.min(Math.asin(helpers_segment._limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(helpers_segment._limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(helpers_segment._limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        helpers_segment.callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        helpers_segment.callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = helpers_segment.toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        helpers_segment.callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (helpers_segment.isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!helpers_segment.isNullOrUndef(label) && !helpers_segment.isArray(label)) {\n                width = helpers_segment._measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (helpers_segment.isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!helpers_segment.isNullOrUndef(nestedLabel) && !helpers_segment.isArray(nestedLabel)) {\n                        width = helpers_segment._measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return helpers_segment._int16Range(this._alignToPixels ? helpers_segment._alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = helpers_segment.toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return helpers_segment._alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = helpers_segment.valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = helpers_segment._alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -helpers_segment.toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = helpers_segment.isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = helpers_segment.toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -helpers_segment.toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = helpers_segment._alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = helpers_segment._alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = helpers_segment._alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = helpers_segment._alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            helpers_segment.clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            helpers_segment.renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            helpers_segment.unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = helpers_segment.toFont(title.font);\n        const padding = helpers_segment.toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || helpers_segment.isObject(position)) {\n            offset += padding.bottom;\n            if (helpers_segment.isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        helpers_segment.renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = helpers_segment.valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = helpers_segment.valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return helpers_segment.toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            helpers_segment.defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in helpers_segment.defaults[scope]) {\n            delete helpers_segment.defaults[scope][id];\n            if (this.override) {\n                delete helpers_segment.overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = helpers_segment.merge(Object.create(null), [\n        parentScope ? helpers_segment.defaults.get(parentScope) : {},\n        helpers_segment.defaults.get(scope),\n        item.defaults\n    ]);\n    helpers_segment.defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        helpers_segment.defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        helpers_segment.defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                helpers_segment.each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = helpers_segment._capitalize(method);\n        helpers_segment.callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        helpers_segment.callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (helpers_segment.callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!helpers_segment.isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = helpers_segment.valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = helpers_segment.defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = helpers_segment.overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!helpers_segment.isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), helpers_segment.defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = helpers_segment.mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = helpers_segment.overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            helpers_segment.mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        helpers_segment.mergeIf(scale, [\n            helpers_segment.defaults.scales[scale.type],\n            helpers_segment.defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = helpers_segment.valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = helpers_segment.resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            helpers_segment.overrides[type] || {},\n            helpers_segment.defaults.datasets[type] || {},\n            {\n                type\n            },\n            helpers_segment.defaults,\n            helpers_segment.descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = helpers_segment.isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = helpers_segment._attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return helpers_segment.isObject(context) ? helpers_segment._attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = helpers_segment._createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>helpers_segment.isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || helpers_segment.isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = helpers_segment._descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (helpers_segment.isFunction(value) || hasFunction(value)) || indexable && helpers_segment.isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    helpers_segment.callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    helpers_segment.callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (helpers_segment._isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = helpers_segment.defaults;\n    static instances = instances;\n    static overrides = helpers_segment.overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = helpers_segment.uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = helpers_segment.debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!helpers_segment.isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            helpers_segment.retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        helpers_segment.clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!helpers_segment.retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        helpers_segment.callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        helpers_segment.each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        helpers_segment.each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = helpers_segment.valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        helpers_segment.each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        helpers_segment.each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = helpers_segment.defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        helpers_segment.each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            helpers_segment.each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        helpers_segment.each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!helpers_segment.setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!helpers_segment.setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        helpers_segment.each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, helpers_segment.isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            helpers_segment.clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            helpers_segment.unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return helpers_segment._isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = helpers_segment.createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (helpers_segment.defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            helpers_segment.clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        helpers_segment.each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        helpers_segment.each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        helpers_segment.each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !helpers_segment._elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = helpers_segment._isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            helpers_segment.callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                helpers_segment.callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !helpers_segment._elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return helpers_segment.each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + helpers_segment.HALF_PI, startAngle - helpers_segment.HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return helpers_segment._readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return helpers_segment._limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: helpers_segment._limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: helpers_segment._limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / helpers_segment.PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + helpers_segment.HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + helpers_segment.HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - helpers_segment.HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - helpers_segment.HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % helpers_segment.TAU || helpers_segment.TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % helpers_segment.TAU || helpers_segment.TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = helpers_segment.getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = helpers_segment.valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= helpers_segment.TAU || helpers_segment._angleBetween(angle, startAngle, endAngle);\n        const withinRadius = helpers_segment._isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > helpers_segment.TAU ? Math.floor(circumference / helpers_segment.TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(helpers_segment.PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = helpers_segment.valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(helpers_segment.valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = helpers_segment.valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = helpers_segment.valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = helpers_segment.valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = helpers_segment.valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return helpers_segment._steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return helpers_segment._bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return helpers_segment._steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return helpers_segment._bezierInterpolation;\n    }\n    return helpers_segment._pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            helpers_segment._updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = helpers_segment._computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = helpers_segment._boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !helpers_segment._isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        helpers_segment.drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : helpers_segment._limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = helpers_segment.toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = helpers_segment.toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || helpers_segment.isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || helpers_segment._isBetween(x, bounds.left, bounds.right)) && (skipY || helpers_segment._isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? helpers_segment.addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!helpers_segment.isNullOrUndef(minIndex) && !helpers_segment.isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = helpers_segment._limitValue(helpers_segment._lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = helpers_segment._limitValue(helpers_segment._lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (helpers_segment.resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (helpers_segment.isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = helpers_segment._boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = helpers_segment._boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = helpers_segment._normalizeAngle(start);\n        end = helpers_segment._normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (helpers_segment.isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!helpers_segment.isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (helpers_segment.isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (helpers_segment.isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (helpers_segment.isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (helpers_segment.isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = helpers_segment.valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (helpers_segment._isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: helpers_segment.TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (helpers_segment.isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (helpers_segment.isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        helpers_segment.clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        helpers_segment.unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = helpers_segment.callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = helpers_segment.toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = helpers_segment.getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = helpers_segment._alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = helpers_segment._alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            helpers_segment.clipArea(ctx, this);\n            this._draw();\n            helpers_segment.unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = helpers_segment.defaults.color;\n        const rtlHelper = helpers_segment.getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = helpers_segment.toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = helpers_segment.valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = helpers_segment.valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = helpers_segment.valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = helpers_segment.valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = helpers_segment.valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = helpers_segment.valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(helpers_segment.valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                helpers_segment.drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = helpers_segment.toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    helpers_segment.addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            helpers_segment.renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: helpers_segment._alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        helpers_segment.overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = helpers_segment._alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = helpers_segment._textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        helpers_segment.restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = helpers_segment.toFont(titleOpts.font);\n        const titlePadding = helpers_segment.toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = helpers_segment.getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = helpers_segment._alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + helpers_segment._alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = helpers_segment._alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(helpers_segment._toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        helpers_segment.renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = helpers_segment.toFont(titleOpts.font);\n        const titlePadding = helpers_segment.toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (helpers_segment._isBetween(x, this.left, this.right) && helpers_segment._isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (helpers_segment._isBetween(x, hitBox.left, hitBox.left + hitBox.width) && helpers_segment._isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                helpers_segment.callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                helpers_segment.callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            helpers_segment.callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = helpers_segment.toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = helpers_segment.isArray(opts.text) ? opts.text.length : 1;\n        this._padding = helpers_segment.toPadding(opts.padding);\n        const textSize = lineCount * helpers_segment.toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = helpers_segment._alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = helpers_segment._alignStartEnd(align, bottom, top);\n                rotation = helpers_segment.PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = helpers_segment._alignStartEnd(align, top, bottom);\n                rotation = helpers_segment.PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = helpers_segment.toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        helpers_segment.renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: helpers_segment._toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = helpers_segment.distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (helpers_segment.isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = helpers_segment.toFont(options.bodyFont);\n    const titleFont = helpers_segment.toFont(options.titleFont);\n    const footerFont = helpers_segment.toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = helpers_segment.toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    helpers_segment.each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    helpers_segment.each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    helpers_segment.each(body, (bodyItem)=>{\n        helpers_segment.each(bodyItem.before, maxLineWidth);\n        helpers_segment.each(bodyItem.lines, maxLineWidth);\n        helpers_segment.each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    helpers_segment.each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: helpers_segment._limitValue(x, 0, chart.width - size.width),\n        y: helpers_segment._limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = helpers_segment.toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return helpers_segment.createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: helpers_segment.noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: helpers_segment.noop,\n    beforeBody: helpers_segment.noop,\n    beforeLabel: helpers_segment.noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!helpers_segment.isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: helpers_segment.noop,\n    afterBody: helpers_segment.noop,\n    beforeFooter: helpers_segment.noop,\n    footer: helpers_segment.noop,\n    afterFooter: helpers_segment.noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        helpers_segment.each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        helpers_segment.each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = helpers_segment.toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = helpers_segment.toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            helpers_segment.drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            helpers_segment.drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = helpers_segment.isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = helpers_segment.toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                helpers_segment.addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                helpers_segment.addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = helpers_segment.toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        helpers_segment.each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            helpers_segment.each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            helpers_segment.each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        helpers_segment.each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = helpers_segment.toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = helpers_segment.toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            helpers_segment.overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            helpers_segment.restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !helpers_segment._elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !helpers_segment._elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : helpers_segment._limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (helpers_segment.isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, helpers_segment.valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !helpers_segment.isNullOrUndef(min);\n    const maxDefined = !helpers_segment.isNullOrUndef(max);\n    const countDefined = !helpers_segment.isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = helpers_segment.niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = helpers_segment.niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!helpers_segment.isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && helpers_segment.almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (helpers_segment.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(helpers_segment._decimalPlaces(spacing), helpers_segment._decimalPlaces(niceMin));\n    factor = Math.pow(10, helpers_segment.isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (helpers_segment.almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && helpers_segment.almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = helpers_segment.toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (helpers_segment.isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = helpers_segment.sign(min);\n            const maxSign = helpers_segment.sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            helpers_segment._setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return helpers_segment.formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: helpers_segment.Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = helpers_segment.isNumberFinite(min) ? min : 0;\n        this.max = helpers_segment.isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = helpers_segment.toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(helpers_segment.log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = helpers_segment.finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = helpers_segment.finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = helpers_segment.finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: helpers_segment.Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return helpers_segment.isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = helpers_segment.isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = helpers_segment.isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !helpers_segment.isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            helpers_segment._setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : helpers_segment.formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = helpers_segment.log10(start);\n        this._valueRange = helpers_segment.log10(this.max) - helpers_segment.log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (helpers_segment.log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = helpers_segment.toPadding(tickOpts.backdropPadding);\n        return helpers_segment.valueOrDefault(tickOpts.font && tickOpts.font.size, helpers_segment.defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = helpers_segment.isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: helpers_segment._longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? helpers_segment.PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = helpers_segment.toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = helpers_segment._normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(helpers_segment.toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(helpers_segment.toDegrees(helpers_segment._normalizeAngle(pointLabelPosition.angle + helpers_segment.HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = helpers_segment._isPointInArea({\n        x: left,\n        y: top\n    }, area) || helpers_segment._isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || helpers_segment._isPointInArea({\n        x: right,\n        y: top\n    }, area) || helpers_segment._isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? helpers_segment.PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!helpers_segment.isNullOrUndef(backdropColor)) {\n        const borderRadius = helpers_segment.toTRBLCorners(opts.borderRadius);\n        const padding = helpers_segment.toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            helpers_segment.addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = helpers_segment.toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        helpers_segment.renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, helpers_segment.TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return helpers_segment.createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: helpers_segment.Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = helpers_segment.toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = helpers_segment.isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = helpers_segment.isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = helpers_segment.callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = helpers_segment.TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return helpers_segment._normalizeAngle(index * angleMultiplier + helpers_segment.toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (helpers_segment.isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (helpers_segment.isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - helpers_segment.HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = helpers_segment.toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = helpers_segment.toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            helpers_segment.renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (helpers_segment.isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!helpers_segment.isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (helpers_segment.isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = helpers_segment._lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        helpers_segment.mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = helpers_segment.isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = helpers_segment.isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = helpers_segment._filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = helpers_segment._limitValue(start, 0, limit);\n        end = helpers_segment._limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = helpers_segment.valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = helpers_segment.isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return helpers_segment.callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = helpers_segment.toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return helpers_segment._arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = helpers_segment._lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = helpers_segment._lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexports.Ticks = helpers_segment.Ticks;\nexports.defaults = helpers_segment.defaults;\nexports.Animation = Animation;\nexports.Animations = Animations;\nexports.ArcElement = ArcElement;\nexports.BarController = BarController;\nexports.BarElement = BarElement;\nexports.BasePlatform = BasePlatform;\nexports.BasicPlatform = BasicPlatform;\nexports.BubbleController = BubbleController;\nexports.CategoryScale = CategoryScale;\nexports.Chart = Chart;\nexports.Colors = plugin_colors;\nexports.DatasetController = DatasetController;\nexports.Decimation = plugin_decimation;\nexports.DomPlatform = DomPlatform;\nexports.DoughnutController = DoughnutController;\nexports.Element = Element;\nexports.Filler = index;\nexports.Interaction = Interaction;\nexports.Legend = plugin_legend;\nexports.LineController = LineController;\nexports.LineElement = LineElement;\nexports.LinearScale = LinearScale;\nexports.LogarithmicScale = LogarithmicScale;\nexports.PieController = PieController;\nexports.PointElement = PointElement;\nexports.PolarAreaController = PolarAreaController;\nexports.RadarController = RadarController;\nexports.RadialLinearScale = RadialLinearScale;\nexports.Scale = Scale;\nexports.ScatterController = ScatterController;\nexports.SubTitle = plugin_subtitle;\nexports.TimeScale = TimeScale;\nexports.TimeSeriesScale = TimeSeriesScale;\nexports.Title = plugin_title;\nexports.Tooltip = plugin_tooltip;\nexports._adapters = adapters;\nexports._detectPlatform = _detectPlatform;\nexports.animator = animator;\nexports.controllers = controllers;\nexports.elements = elements;\nexports.layouts = layouts;\nexports.plugins = plugins;\nexports.registerables = registerables;\nexports.registry = registry;\nexports.scales = scales;\n//# sourceMappingURL=chart.cjs.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\n'use strict';\n\nvar color$1 = require('@kurkle/color');\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new color$1.Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new color$1.Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexports.HALF_PI = HALF_PI;\nexports.INFINITY = INFINITY;\nexports.PI = PI;\nexports.PITAU = PITAU;\nexports.QUARTER_PI = QUARTER_PI;\nexports.RAD_PER_DEG = RAD_PER_DEG;\nexports.TAU = TAU;\nexports.TWO_THIRDS_PI = TWO_THIRDS_PI;\nexports.Ticks = Ticks;\nexports._addGrace = _addGrace;\nexports._alignPixel = _alignPixel;\nexports._alignStartEnd = _alignStartEnd;\nexports._angleBetween = _angleBetween;\nexports._angleDiff = _angleDiff;\nexports._arrayUnique = _arrayUnique;\nexports._attachContext = _attachContext;\nexports._bezierCurveTo = _bezierCurveTo;\nexports._bezierInterpolation = _bezierInterpolation;\nexports._boundSegment = _boundSegment;\nexports._boundSegments = _boundSegments;\nexports._capitalize = _capitalize;\nexports._computeSegments = _computeSegments;\nexports._createResolver = _createResolver;\nexports._decimalPlaces = _decimalPlaces;\nexports._deprecated = _deprecated;\nexports._descriptors = _descriptors;\nexports._elementsEqual = _elementsEqual;\nexports._factorize = _factorize;\nexports._filterBetween = _filterBetween;\nexports._getParentNode = _getParentNode;\nexports._getStartAndCountOfVisiblePoints = _getStartAndCountOfVisiblePoints;\nexports._int16Range = _int16Range;\nexports._isBetween = _isBetween;\nexports._isClickEvent = _isClickEvent;\nexports._isDomSupported = _isDomSupported;\nexports._isPointInArea = _isPointInArea;\nexports._limitValue = _limitValue;\nexports._longestText = _longestText;\nexports._lookup = _lookup;\nexports._lookupByKey = _lookupByKey;\nexports._measureText = _measureText;\nexports._merger = _merger;\nexports._mergerIf = _mergerIf;\nexports._normalizeAngle = _normalizeAngle;\nexports._parseObjectDataRadialScale = _parseObjectDataRadialScale;\nexports._pointInLine = _pointInLine;\nexports._readValueToProps = _readValueToProps;\nexports._rlookupByKey = _rlookupByKey;\nexports._scaleRangesChanged = _scaleRangesChanged;\nexports._setMinAndMaxByKey = _setMinAndMaxByKey;\nexports._splitKey = _splitKey;\nexports._steppedInterpolation = _steppedInterpolation;\nexports._steppedLineTo = _steppedLineTo;\nexports._textX = _textX;\nexports._toLeftRightCenter = _toLeftRightCenter;\nexports._updateBezierControlPoints = _updateBezierControlPoints;\nexports.addRoundedRectPath = addRoundedRectPath;\nexports.almostEquals = almostEquals;\nexports.almostWhole = almostWhole;\nexports.callback = callback;\nexports.clearCanvas = clearCanvas;\nexports.clipArea = clipArea;\nexports.clone = clone;\nexports.color = color;\nexports.createContext = createContext;\nexports.debounce = debounce;\nexports.defaults = defaults;\nexports.defined = defined;\nexports.descriptors = descriptors;\nexports.distanceBetweenPoints = distanceBetweenPoints;\nexports.drawPoint = drawPoint;\nexports.drawPointLegend = drawPointLegend;\nexports.each = each;\nexports.effects = effects;\nexports.finiteOrDefault = finiteOrDefault;\nexports.fontString = fontString;\nexports.formatNumber = formatNumber;\nexports.getAngleFromPoint = getAngleFromPoint;\nexports.getHoverColor = getHoverColor;\nexports.getMaximumSize = getMaximumSize;\nexports.getRelativePosition = getRelativePosition;\nexports.getRtlAdapter = getRtlAdapter;\nexports.getStyle = getStyle;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isNullOrUndef = isNullOrUndef;\nexports.isNumber = isNumber;\nexports.isNumberFinite = isNumberFinite;\nexports.isObject = isObject;\nexports.isPatternOrGradient = isPatternOrGradient;\nexports.listenArrayEvents = listenArrayEvents;\nexports.log10 = log10;\nexports.merge = merge;\nexports.mergeIf = mergeIf;\nexports.niceNum = niceNum;\nexports.noop = noop;\nexports.overrideTextDirection = overrideTextDirection;\nexports.overrides = overrides;\nexports.readUsedSize = readUsedSize;\nexports.renderText = renderText;\nexports.requestAnimFrame = requestAnimFrame;\nexports.resolve = resolve;\nexports.resolveObjectKey = resolveObjectKey;\nexports.restoreTextDirection = restoreTextDirection;\nexports.retinaScale = retinaScale;\nexports.setsEqual = setsEqual;\nexports.sign = sign;\nexports.splineCurve = splineCurve;\nexports.splineCurveMonotone = splineCurveMonotone;\nexports.supportsEventListenerOptions = supportsEventListenerOptions;\nexports.throttled = throttled;\nexports.toDegrees = toDegrees;\nexports.toDimension = toDimension;\nexports.toFont = toFont;\nexports.toFontString = toFontString;\nexports.toLineHeight = toLineHeight;\nexports.toPadding = toPadding;\nexports.toPercentage = toPercentage;\nexports.toRadians = toRadians;\nexports.toTRBL = toTRBL;\nexports.toTRBLCorners = toTRBLCorners;\nexports.uid = uid;\nexports.unclipArea = unclipArea;\nexports.unlistenArrayEvents = unlistenArrayEvents;\nexports.valueOrDefault = valueOrDefault;\n//# sourceMappingURL=helpers.segment.cjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"./scss/styles.scss\");\r\n//import $ from \"jquery\";\r\n// tests\r\nrequire(\"./tests/\");\r\n"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","GetData","DATA","spreadsheetId","sheetname","findGetParameters","key","location","search","substring","split","forEach","item","tmp","undefined","get_id","get_name","data","length","response","fetch","json","rows","rawRows","values","headers","shift","row","rowData","reduce","acc","cell","index","push","parseData","console","error","LoadGSheetsData","__importDefault","mod","__esModule","LineGraph","auto_1","constructor","chartData","graphscontainerID","container","document","getElementById","UICreateGraphRowHTML","canvasId","appendChild","canvas","querySelector","chart","CreateLineChart","titleHTML","stat_avgHTML","stat_curHTML","stat_sdHTML","stat_cvHTML","graphId","graphRow","createElement","classList","add","titleCol","yTitle","innerHTML","graph","setAttribute","dataSummary","table","UICreateDataStatsTableHTML","tr1","td1","td2","tr2","td3","tr3","td4","yMin","yMax","xData","yData","ctx","getContext","target","labels","datasets","map","v","i","pointBackgroundColor","context","dataIndex","pointStyle","default","defaults","plugins","legend","display","elements","line","borderWidth","maintainAspectRatio","point","hitRadius","radius","type","options","scales","x","ticks","y","title","min","max","offset","alignToPixels","backgroundColor","stepSize","major","enabled","padding","callback","val","num","Number","toFixed","trim","w","measureText","width","interaction","mode","tooltip","callbacks","label","toString","getMean","array","n","a","b","getStandardDeviation","mean","Math","sqrt","pow","getCV","uiUpdateDataSummaryTable","currVal","newdata","innerText","AddDataPoint","newy","update","UICreateQCFileTable","GraphQCFile","UICreateLineGraph_1","GetGSheetsData_1","itemid","find","filter","id","toLowerCase","replace","s","thead","tr","tbody","th1","th2","thlast","log","sampleData","sampleInfo","headingInfoUnique","Set","th","td1text","padStart","heading","td","coldata","tdlast","analysisdatesArray","addEventListener","_a","style","backbutton","removeChild","UICreateQCFileTable_1","parentContainerID","parent","UICreateQCFileTableTest","module","round","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexParse","str","ret","len","r","g","hexString","isShort","alpha","HUE_RE","hsl2rgbn","k","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","Z","Y","X","W","V","U","T","S","R","Q","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","parseInt","unpack","transparent","RGB_RE","rgbParse","rgbString","to","from","modHSL","ratio","clone","proto","assign","fromObject","input","Color","charAt","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","freeze","__proto__","b2p","factory","chartjs","Chart","registerables","register","helpers_segment","Animator","_request","_charts","Map","_running","_lastDate","_notify","anims","date","listeners","numSteps","duration","fn","initial","currentStep","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","has","cur","_duration","stop","cancel","remove","delete","animator","interpolators","boolean","factor","c0","number","Animation","cfg","prop","currentValue","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","animation","animatedProps","getOwnPropertyNames","option","properties","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","props","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","applyStack","stack","dsIndex","singleMode","datasetIndex","otherValue","isNumberFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","warn","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","top","right","bottom","left","disabled","toClip","clip","defaultClip","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","createContext","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","grid","_value_","beginAtZero","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","_getStacks","last","skipNull","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","points","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","startsWith","aspectRatio","generateLabels","text","fillStyle","strokeStyle","borderColor","fontColor","lineWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","showLine","spanGaps","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestCartesianItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","positions","margin","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","includes","_stack","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","tickLength","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","autoSkip","source","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","ArcElement","borderJoinStyle","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","capBezierPoints","_path","_points","_segments","_pointsUpdated","_updateBezierControlPoints","segments","_computeSegments","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","skipX","skipY","bounds","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","boundingRects","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_getTarget","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","itemWidth","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","addedLabels","addIfString","lastIndexOf","findOrAddLabel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","tickValue","generateTicks$1","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","logarithmic","_zero","minExp","exp","startExp","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","_longestText","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","_adapters","color$1","defaultValue","dimension","endsWith","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","keyResolvers","_splitKey","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","_angleDiff","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","requestAnimationFrame","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","JSON","stringify","Intl","NumberFormat","getNumberFormat","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","parentContext","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","round1","passiveSupported","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","readStyle","styleChanged","prevStyle","replacer","minmax","keepZero","halfWidth","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","flip","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","cp1","cp2","sub","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_deprecated","a0","a1","arrayOfThings","thing","nestedThing","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","midpoint","controlPoints","inArea","inAreaPrev","inAreaNext","rounded","resetTransform","clearRect","timeout","clearTimeout","setTimeout","loopable","pixelSize","fontStyle","fontFamily","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","bbWidth","bbHeight","containerSize","getBoundingClientRect","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","borders","paddings","borderBox","touches","shadowRoot","useOffsetPos","clientX","clientY","getCanvasPosition","rectX","getRightToLeftAdapter","_itemWidth","_chartjs","object","roundedRange","niceRange","fraction","direction","original","getPropertyPriority","setProperty","prevTextDirection","setRenderOpts","strokeText","inputs","info","cacheable","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","argsToUse","ticking","radians","degrees","stub","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}