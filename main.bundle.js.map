{"version":3,"file":"main.bundle.js","mappings":";iFACA,IAAIA,EAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAO,OAAOC,eAAeC,EAAS,aAAc,CAAEX,OAAO,IACtDW,EAAQC,aAAU,EAClB,MAAMC,EAAa,EAAQ,KAG3B,IAGIC,EAHAC,EAAgB,+CAEhBC,EAAY,aAkDhB,SAASC,EAAkBC,EAAM,IAC7B,IAAIb,EAAS,GAUb,OATAc,SAASC,OACJC,UAAU,GACVC,MAAM,KACNC,SAAQ,SAAUC,GACnB,IAAIC,EAAMD,EAAKF,MAAM,KACT,IAAPJ,GAAaA,GAAOO,EAAI,IAAiB,IAAVA,EAAI,KACpCpB,EAASoB,EAAI,GAErB,IACOpB,CACX,CAKA,SAASqB,EAAqBC,GAC1B,MAAMC,EAAO,GACPC,EAAUF,EAAKG,QAAU,CAAC,IAC1BC,EAAUF,EAAQG,SAAW,GACnC,IAAK,MAAMC,KAAOJ,EAAS,CACvB,MAAMK,EAAUD,EAAIE,QAAO,CAACC,EAAKC,EAAMC,KACnCF,EAAIL,EAAQO,IAAUD,EACfD,IACR,CAAC,GACJR,EAAKW,KAAKL,EACd,CACA,OAAON,CACX,CAYAjB,EAAQC,QAXR,WACI,OAAOtB,EAAUC,UAAM,OAAQ,GAAQ,YACnC,YAAaiD,IAAT1B,QA5EZ,WACI,OAAOxB,EAAUC,UAAM,OAAQ,GAAQ,YAEnC,MAEMkD,EAASxB,EAAkB,MAE3ByB,EAAWzB,EAAkB,QACnC,IAAIU,EAEAc,EAAOE,OAAS,IAChB5B,EAAgBE,EAAkB,OAClCyB,EAASC,OAAS,IAClB3B,EAAYC,EAAkB,SAM9B,IACI,MAAM2B,QAAiBC,MAAM,iDAAiD9B,YAAwBC,gDAA2B,CAC7H8B,KAAM,OACNf,QAAS,CACL,eAAgB,sBAMxB,OAHAJ,QAAaiB,EAASG,OACtBjC,EAAOY,EAAqBC,EAGhC,CACA,MAAOxB,GAIH,OAHAW,EAAOY,EAAqBb,EAAWmC,UACvCC,QAAQC,IAAI,qBACZD,QAAQE,MAAM,mCAAoChD,EAAGa,EAAWD,GACzD,IACX,CAER,GACJ,CAsC6BqC,GAIVtC,CAEf,GACJ,4BC1GAL,OAAOC,eAAeC,EAAS,aAAc,CAAEX,OAAO,IACtDW,EAAQqC,cAAW,EACnBrC,EAAQqC,SAAW,CACf,MAAS,qBACT,eAAkB,OAClB,OAAU,CACN,CACI,SACA,GACA,GACA,WACA,GACA,GACA,GACA,KACA,GACA,GACA,GACA,oBACA,oBACA,qBAEJ,CACI,WACA,GACA,GACA,SACA,aACA,GACA,wBAEJ,CACI,cACA,GACA,GACA,SACA,aACA,GACA,cAEJ,CACI,gBACA,GACA,GACA,SACA,cACA,GACA,kBAEJ,CACI,YACA,GACA,GACA,SACA,WAEJ,CACI,SACA,GACA,GACA,SACA,WAEJ,CACI,QACA,GACA,GACA,SACA,WAEJ,CACI,WACA,SACA,GACA,SACA,WAEJ,CACI,WACA,GACA,GACA,SACA,WAEJ,CACI,SACA,GACA,GACA,SACA,WAEJ,CACI,QACA,GACA,GACA,SACA,WAEJ,CACI,MACA,mBACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,YACA,GACA,KACA,KAEJ,CACI,MACA,mBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,KAEJ,CACI,aACA,mBACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,OACA,GACA,KACA,MAEJ,CACI,aACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,MAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,QACA,KACA,GACA,MACA,OAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,KACA,GACA,KACA,MAEJ,CACI,OACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,OACA,GACA,KACA,MAEJ,CACI,WACA,GACA,GACA,SACA,cACA,GACA,GACA,QACA,OACA,QACA,YACA,GACA,MACA,OAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,KACA,GACA,KACA,MAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,MAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,KACA,GACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,OACA,YACA,GACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,KAEJ,CACI,gBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,MACA,OAEJ,CACI,gBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,MACA,OAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,MAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,IACA,GACA,KACA,MAEJ,CACI,oBACA,cACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,IACA,GACA,KACA,MAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,KAEJ,CACI,oBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,KAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,OACA,aACA,GACA,MACA,OAEJ,CACI,aACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,KAEJ,CACI,UACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,QACA,YACA,GACA,MACA,OAEJ,CACI,cACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,KAEJ,CACI,SACA,GACA,GACA,WACA,GACA,GACA,GACA,KACA,GACA,GACA,GACA,0DACA,oBACA,mBACA,mBACA,uBAEJ,CACI,WACA,GACA,GACA,SACA,aACA,GACA,wBAEJ,CACI,cACA,GACA,GACA,SACA,aACA,GACA,cAEJ,CACI,gBACA,GACA,GACA,SACA,cACA,GACA,kBAEJ,CACI,YACA,GACA,GACA,SACA,WAEJ,CACI,SACA,GACA,GACA,SACA,WAEJ,CACI,QACA,GACA,GACA,SACA,WAEJ,CACI,WACA,SACA,GACA,SACA,WAEJ,CACI,WACA,GACA,GACA,SACA,WAEJ,CACI,SACA,GACA,GACA,SACA,WAEJ,CACI,QACA,GACA,GACA,SACA,WAEJ,CACI,MACA,mBACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,YACA,GACA,IACA,IACA,KACA,MAEJ,CACI,MACA,mBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,IACA,IACA,KAEJ,CACI,aACA,mBACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,OACA,GACA,KACA,KACA,KACA,MAEJ,CACI,aACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,KACA,KACA,MAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,QACA,KACA,GACA,MACA,KACA,MACA,MAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,KACA,GACA,KACA,KACA,KACA,MAEJ,CACI,OACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,OACA,GACA,KACA,KACA,KACA,MAEJ,CACI,WACA,GACA,GACA,SACA,cACA,GACA,GACA,QACA,OACA,QACA,YACA,GACA,MACA,MACA,MACA,OAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,KACA,GACA,KACA,KACA,KACA,MAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,KACA,KACA,MAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,KACA,GACA,IACA,IACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,OACA,YACA,GACA,IACA,IACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,IACA,IACA,KAEJ,CACI,gBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,IACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,MACA,MACA,MACA,KAEJ,CACI,gBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,MACA,MACA,MACA,KAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,KACA,KACA,MAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,IACA,GACA,KACA,KACA,KACA,MAEJ,CACI,oBACA,cACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,IACA,GACA,KACA,KACA,KACA,KAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,IACA,IACA,KAEJ,CACI,oBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,IACA,IACA,KAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,OACA,aACA,GACA,MACA,MACA,MACA,KAEJ,CACI,aACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,IACA,IACA,KAEJ,CACI,UACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,QACA,YACA,GACA,MACA,MACA,MACA,OAEJ,CACI,cACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,IACA,IACA,KAEJ,CACI,SACA,GACA,GACA,WACA,GACA,GACA,GACA,YACA,GACA,GACA,GACA,wCACA,oBACA,oBACA,oBAEJ,CACI,aACA,GACA,GACA,SACA,cACA,GACA,OAEJ,CACI,OACA,GACA,GACA,SACA,cACA,GACA,WAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,KAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,MAEJ,CACI,OACA,GACA,GACA,SACA,cACA,GACA,KAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,OAEJ,CACI,gBACA,GACA,GACA,SACA,cACA,GACA,SAEJ,CACI,YACA,GACA,GACA,SACA,cACA,GACA,SAEJ,CACI,gBACA,GACA,GACA,SACA,ccACA,GACA,GACA,SACA,UACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,wBACA,wBACA,yBAEJ,CACI,MACA,mBACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,YACA,GACA,IACA,KAEJ,CACI,MACA,mBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,KAEJ,CACI,aACA,mBACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,OACA,GACA,KACA,MAEJ,CACI,aACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,MAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,QACA,KACA,GACA,MACA,OAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,KACA,GACA,KACA,MAEJ,CACI,OACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,OACA,GACA,KACA,MAEJ,CACI,WACA,GACA,GACA,SACA,cACA,GACA,GACA,QACA,OACA,QACA,YACA,GACA,MACA,OAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,KACA,GACA,KACA,MAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,MAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,KACA,GACA,IACA,MAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,OACA,YACA,GACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,KAEJ,CACI,gBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,MACA,OAEJ,CACI,gBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,MACA,OAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,MAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,IACA,GACA,KACA,MAEJ,CACI,oBACA,cACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,IACA,GACA,KACA,MAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,KAEJ,CACI,oBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,KAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,OACA,aACA,GACA,MACA,OAEJ,CACI,aACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,KAEJ,CACI,UACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,QACA,YACA,GACA,MACA,OAEJ,CACI,cACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,KAEJ,CACI,SACA,GACA,GACA,WACA,GACA,GACA,GACA,YACA,GACA,GACA,GACA,qCACA,oBACA,mBACA,oBAEJ,CACI,WACA,GACA,GACA,SACA,aACA,GACA,wBAEJ,CACI,cACA,GACA,GACA,SACA,aACA,GACA,cAEJ,CACI,gBACA,GACA,GACA,SACA,cACA,GACA,kBAEJ,CACI,YACA,GACA,GACA,SACA,WAEJ,CACI,SACA,GACA,GACA,SACA,WAEJ,CACI,QACA,GACA,GACA,SACA,WAEJ,CACI,WACA,SACA,GACA,SACA,WAEJ,CACI,WACA,GACA,GACA,SACA,WAEJ,CACI,SACA,GACA,GACA,SACA,WAEJ,CACI,QACA,GACA,GACA,SACA,WAEJ,CACI,MACA,mBACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,YACA,GACA,IACA,IACA,MAEJ,CACI,MACA,mBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,IACA,KAEJ,CACI,aACA,mBACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,OACA,GACA,KACA,KACA,MAEJ,CACI,aACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,KACA,MAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,QACA,KACA,GACA,MACA,MACA,OAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,KACA,GACA,KACA,KACA,MAEJ,CACI,OACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,OACA,GACA,KACA,KACA,MAEJ,CACI,WACA,GACA,GACA,SACA,cACA,GACA,GACA,QACA,OACA,QACA,YACA,GACA,MACA,MACA,OAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,KACA,GACA,KACA,KACA,MAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,KACA,MAEJ,CACI,MACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,KACA,GACA,IACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,OACA,YACA,GACA,IACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,IACA,KAEJ,CACI,gBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,IACA,IACA,KAEJ,CACI,kBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,MACA,MACA,OAEJ,CACI,gBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,YACA,GACA,MACA,MACA,OAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,OACA,IACA,GACA,KACA,KACA,MAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,IACA,GACA,KACA,KACA,MAEJ,CACI,oBACA,cACA,GACA,SACA,cACA,GACA,GACA,OACA,MACA,OACA,IACA,GACA,KACA,KACA,MAEJ,CACI,sBACA,gBACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,IACA,KAEJ,CACI,oBACA,cACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,IACA,KAEJ,CACI,SACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,OACA,aACA,GACA,MACA,MACA,OAEJ,CACI,aACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,IACA,KAEJ,CACI,UACA,GACA,GACA,SACA,cACA,GACA,GACA,OACA,OACA,QACA,YACA,GACA,MACA,MACA,OAEJ,CACI,cACA,GACA,GACA,SACA,cACA,GACA,GACA,MACA,MACA,MACA,IACA,GACA,IACA,IACA,yCC7oEZ,IAAIK,EAAmB9D,MAAQA,KAAK8D,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACA7C,OAAOC,eAAeC,EAAS,aAAc,CAAEX,OAAO,IACtDW,EAAQ6C,eAAY,EACpB,MAAMC,EAASJ,EAAgB,EAAQ,MA6OvC1C,EAAQ6C,UAvOR,MACI,WAAAE,CAAYC,GACRpE,KAAKoC,KAAOgC,CAChB,CASA,oBAAAC,CAAqBC,GACjB,MAAMC,EAAWC,SAASC,cAAc,OACxCF,EAASG,UAAUC,IAAI,YACvB,MAAMC,EAAWJ,SAASC,cAAc,OAClCI,EAASL,SAASC,cAAc,OACtCI,EAAOH,UAAUC,IAAI,UAAW,UAChCC,EAASF,UAAUC,IAAI,YACvBC,EAASE,YAAYD,GACrBN,EAASO,YAAYF,GACrB,MAAMG,EAAQP,SAASC,cAAc,OACrCM,EAAML,UAAUC,IAAI,SACpBJ,EAASO,YAAYC,GACrB,MAAMC,EAASR,SAASC,cAAc,UA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","sources":["webpack://heme-anallyzer-app/./src/Data/GetGSheetsData.ts","webpack://heme-anallyzer-app/./src/Data/testdata.ts","webpack://heme-anallyzer-app/./src/Graph/UICreateLineGraph.ts","webpack://heme-anallyzer-app/./src/Tables/UICreateQCFileTable.ts","webpack://heme-anallyzer-app/./src/tests/UICreateQCFileTableTest.ts","webpack://heme-anallyzer-app/./src/tests/index.ts","webpack://heme-anallyzer-app/./node_modules/@kurkle/color/dist/color.cjs","webpack://heme-anallyzer-app/./node_modules/chart.js/auto/auto.cjs","webpack://heme-anallyzer-app/./node_modules/chart.js/dist/chart.cjs","webpack://heme-anallyzer-app/./node_modules/chart.js/dist/chunks/helpers.segment.cjs","webpack://heme-anallyzer-app/webpack/bootstrap","webpack://heme-anallyzer-app/webpack/runtime/make namespace object","webpack://heme-anallyzer-app/./src/index.ts"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GetData = void 0;\r\nconst testdata_1 = require(\"./testdata\");\r\n'./testdata';\r\n// Default google worksheet id\r\nvar spreadsheetId = \"1QCDTOlikbl3E0CjCcmjNOfPrl1veu1C1j6tBtlXKI_o\";\r\n// Default sheet name(s) within worksheet \r\nvar sheetname = 'SampleData';\r\nvar DATA;\r\n/** Load sheet data from specified google sheet.\r\n * If _GET params are passed in URL, they override the Defaults.\r\n * - require API_KEY in ./.envs to be set\r\n*/\r\nfunction LoadGSheetsData() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        // get credentials from .env using dot-env\r\n        const apiKey = process.env.API_KEY;\r\n        // the google worksheet id\r\n        const get_id = findGetParameters('id');\r\n        // the sheet name(s) within worksheet \r\n        const get_name = findGetParameters('name');\r\n        let data;\r\n        // _GET param overrides defaults\r\n        if (get_id.length > 0)\r\n            spreadsheetId = findGetParameters('id');\r\n        if (get_name.length > 0)\r\n            sheetname = findGetParameters('name');\r\n        if (!apiKey) {\r\n            console.error('app key error');\r\n            process.exit(1);\r\n        }\r\n        else {\r\n            try {\r\n                const response = yield fetch(`https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}/values/${sheetname}?key=${apiKey}`, {\r\n                    mode: \"cors\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n                data = yield response.json();\r\n                DATA = parseDataToArrayRows(data);\r\n                //console.log(DATA);\r\n                return DATA;\r\n            }\r\n            catch (e) {\r\n                DATA = parseDataToArrayRows(testdata_1.testData);\r\n                console.log(\"loading test data\");\r\n                console.error(\"Error fetching spreadsheet data:\", e, sheetname, spreadsheetId);\r\n                return null;\r\n            }\r\n        }\r\n    });\r\n}\r\n/** Get set up parameters from _GET\r\n * @param {string} key param name to get\r\n * @returns {string} value where key matches paramName\r\n */\r\nfunction findGetParameters(key = '') {\r\n    var result = '';\r\n    location.search\r\n        .substring(1)\r\n        .split(\"&\")\r\n        .forEach(function (item) {\r\n        let tmp = item.split('=');\r\n        if ((key == '' || key == tmp[0]) && tmp[0] != '') {\r\n            result = tmp[1];\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/** Parses data to rows\r\n * @param data Incoming data returned from Google Sheets API\r\n * @returns Rocord<string, string>[] Array of rows with headers as key\r\n */\r\nfunction parseDataToArrayRows(data) {\r\n    const rows = [];\r\n    const rawRows = data.values || [[]];\r\n    const headers = rawRows.shift() || [];\r\n    for (const row of rawRows) {\r\n        const rowData = row.reduce((acc, cell, index) => {\r\n            acc[headers[index]] = cell;\r\n            return acc;\r\n        }, {});\r\n        rows.push(rowData);\r\n    }\r\n    return rows;\r\n}\r\nfunction GetData() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (DATA === undefined) {\r\n            let data = yield LoadGSheetsData();\r\n            return data;\r\n        }\r\n        else {\r\n            return DATA;\r\n        }\r\n    });\r\n}\r\nexports.GetData = GetData;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.testData = void 0;\r\nexports.testData = {\r\n    \"range\": \"SampleData!A1:P153\",\r\n    \"majorDimension\": \"ROWS\",\r\n    \"values\": [\r\n        [\r\n            \"QC-001\",\r\n            \"\",\r\n            \"\",\r\n            \"QCSample\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"OK\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"8/1/2023 11:27:55\",\r\n            \"9/18/2023 0:00:00\",\r\n            \"8/1/2023 11:27:55\"\r\n        ],\r\n        [\r\n            \"Material\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"SampleInfo\",\r\n            \"\",\r\n            \"XN-L Control Level 1\"\r\n        ],\r\n        [\r\n            \"Expiry Date\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"SampleInfo\",\r\n            \"\",\r\n            \"31/08/2023\"\r\n        ],\r\n        [\r\n            \"Cell Pack DCL\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"ReagentInfo\",\r\n            \"\",\r\n            \"qc-001 reagent\"\r\n        ],\r\n        [\r\n            \"Validated\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Output\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"P / N\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Rack no.\",\r\n            \"Rack #\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Position\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Action\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Error\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"WBC\",\r\n            \"WBC<sup>+4</sup>\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"11.3\",\r\n            \"5.9\",\r\n            \"16.7\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"10\",\r\n            \"6\"\r\n        ],\r\n        [\r\n            \"RBC\",\r\n            \"RBC<sup>+4</sup>\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"4.2\",\r\n            \"3.2\",\r\n            \"5.1\",\r\n            \"x 10^6/μL\",\r\n            \"\",\r\n            \"4\",\r\n            \"4\"\r\n        ],\r\n        [\r\n            \"Hemoglobin\",\r\n            \"HGB<sup>+4</sup>\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"13.4\",\r\n            \"10.2\",\r\n            \"16.6\",\r\n            \"g/dL\",\r\n            \"\",\r\n            \"11\",\r\n            \"11\"\r\n        ],\r\n        [\r\n            \"Hematocrit\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"38.4\",\r\n            \"29.1\",\r\n            \"47.7\",\r\n            \"%\",\r\n            \"\",\r\n            \"30\",\r\n            \"30\"\r\n        ],\r\n        [\r\n            \"MCV\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"91.0\",\r\n            \"75.6\",\r\n            \"106.3\",\r\n            \"fL\",\r\n            \"\",\r\n            \"100\",\r\n            \"100\"\r\n        ],\r\n        [\r\n            \"MCH\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"31.2\",\r\n            \"26.0\",\r\n            \"36.4\",\r\n            \"pg\",\r\n            \"\",\r\n            \"30\",\r\n            \"30\"\r\n        ],\r\n        [\r\n            \"MCHC\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"34.7\",\r\n            \"33.6\",\r\n            \"35.7\",\r\n            \"g/dL\",\r\n            \"\",\r\n            \"35\",\r\n            \"35\"\r\n        ],\r\n        [\r\n            \"Platelet\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"283.0\",\r\n            \"95.0\",\r\n            \"471.0\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"100\",\r\n            \"100\"\r\n        ],\r\n        [\r\n            \"RDW-SD\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"50.3\",\r\n            \"34.9\",\r\n            \"65.7\",\r\n            \"fL\",\r\n            \"\",\r\n            \"60\",\r\n            \"60\"\r\n        ],\r\n        [\r\n            \"RDW-CV\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"15.8\",\r\n            \"13.3\",\r\n            \"18.2\",\r\n            \"%\",\r\n            \"\",\r\n            \"15\",\r\n            \"15\"\r\n        ],\r\n        [\r\n            \"MPV\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"8.6\",\r\n            \"7.3\",\r\n            \"9.9\",\r\n            \"fL\",\r\n            \"\",\r\n            \"9\",\r\n            \"9\"\r\n        ],\r\n        [\r\n            \"Neutrophils no.\",\r\n            \"Neutrophils #\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"6.8\",\r\n            \"2.2\",\r\n            \"11.4\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"3\",\r\n            \"3\"\r\n        ],\r\n        [\r\n            \"Lymphocytes no.\",\r\n            \"Lymphocytes #\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"3.5\",\r\n            \"1.2\",\r\n            \"5.7\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"5\",\r\n            \"5\"\r\n        ],\r\n        [\r\n            \"Monocytes no.\",\r\n            \"Monocytes #\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"2.6\",\r\n            \"0.1\",\r\n            \"5.0\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"5\",\r\n            \"5\"\r\n        ],\r\n        [\r\n            \"Eosinophils no.\",\r\n            \"Eosinophils #\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.3\",\r\n            \"0.0\",\r\n            \"0.5\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"0.5\",\r\n            \"0.5\"\r\n        ],\r\n        [\r\n            \"Basophils no.\",\r\n            \"Basophils #\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.0\",\r\n            \"0.1\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.1\"\r\n        ],\r\n        [\r\n            \"Neutrophils percent\",\r\n            \"Neutrophils %\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"42.0\",\r\n            \"14.6\",\r\n            \"69.3\",\r\n            \"%\",\r\n            \"\",\r\n            \"69\",\r\n            \"69\"\r\n        ],\r\n        [\r\n            \"Lymphocytes percent\",\r\n            \"Lymphocytes %\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"39.0\",\r\n            \"8.0\",\r\n            \"70.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"70\",\r\n            \"70\"\r\n        ],\r\n        [\r\n            \"Monocytes percent\",\r\n            \"Monocytes %\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"11.5\",\r\n            \"4.0\",\r\n            \"19.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"19\",\r\n            \"19\"\r\n        ],\r\n        [\r\n            \"Eosinophils percent\",\r\n            \"Eosinophils %\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"4.0\",\r\n            \"1.0\",\r\n            \"7.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"7\",\r\n            \"7\"\r\n        ],\r\n        [\r\n            \"Basophils percent\",\r\n            \"Basophils %\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.5\",\r\n            \"0.0\",\r\n            \"1.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"1\"\r\n        ],\r\n        [\r\n            \"IG no.\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.0\",\r\n            \"0.28\",\r\n            \"x 10^3/μL%\",\r\n            \"\",\r\n            \"0.2\",\r\n            \"0.2\"\r\n        ],\r\n        [\r\n            \"IG percent\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.9\",\r\n            \"0.0\",\r\n            \"1.7\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"1\"\r\n        ],\r\n        [\r\n            \"RET no.\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"74.5\",\r\n            \"29.0\",\r\n            \"120.0\",\r\n            \"x 10^6/μL\",\r\n            \"\",\r\n            \"100\",\r\n            \"100\"\r\n        ],\r\n        [\r\n            \"RET percent\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-001\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"2.6\",\r\n            \"0.4\",\r\n            \"4.8\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"1\"\r\n        ],\r\n        [\r\n            \"QC-002\",\r\n            \"\",\r\n            \"\",\r\n            \"QCSample\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"OK\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"8/1/2023 9:00:00; 9/9/2023 9:00:00; 9//15/2023 10:00:00\",\r\n            \"9/18/2023 0:00:00\",\r\n            \"8/1/2023 9:00:00\",\r\n            \"9/9/2023 9:00:00\",\r\n            \"9//15/2023 10:00:00\"\r\n        ],\r\n        [\r\n            \"Material\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"SampleInfo\",\r\n            \"\",\r\n            \"XN-L Control Level 2\"\r\n        ],\r\n        [\r\n            \"Expiry Date\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"SampleInfo\",\r\n            \"\",\r\n            \"31/08/2023\"\r\n        ],\r\n        [\r\n            \"Cell Pack DCL\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"ReagentInfo\",\r\n            \"\",\r\n            \"qc-002 reagent\"\r\n        ],\r\n        [\r\n            \"Validated\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Output\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"P / N\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Rack no.\",\r\n            \"Rack #\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Position\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Action\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Error\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"WBC\",\r\n            \"WBC<sup>+4</sup>\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"11.3\",\r\n            \"5.9\",\r\n            \"16.7\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"7\",\r\n            \"8\",\r\n            \"10\",\r\n            \"12\"\r\n        ],\r\n        [\r\n            \"RBC\",\r\n            \"RBC<sup>+4</sup>\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"4.2\",\r\n            \"3.2\",\r\n            \"5.1\",\r\n            \"x 10^6/μL\",\r\n            \"\",\r\n            \"4\",\r\n            \"4\",\r\n            \"4\",\r\n            \"4\"\r\n        ],\r\n        [\r\n            \"Hemoglobin\",\r\n            \"HGB<sup>+4</sup>\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"13.4\",\r\n            \"10.2\",\r\n            \"16.6\",\r\n            \"g/dL\",\r\n            \"\",\r\n            \"11\",\r\n            \"11\",\r\n            \"11\",\r\n            \"13\"\r\n        ],\r\n        [\r\n            \"Hematocrit\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"38.4\",\r\n            \"29.1\",\r\n            \"47.7\",\r\n            \"%\",\r\n            \"\",\r\n            \"30\",\r\n            \"30\",\r\n            \"30\",\r\n            \"38\"\r\n        ],\r\n        [\r\n            \"MCV\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"91.0\",\r\n            \"75.6\",\r\n            \"106.3\",\r\n            \"fL\",\r\n            \"\",\r\n            \"100\",\r\n            \"80\",\r\n            \"100\",\r\n            \"92\"\r\n        ],\r\n        [\r\n            \"MCH\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"31.2\",\r\n            \"26.0\",\r\n            \"36.4\",\r\n            \"pg\",\r\n            \"\",\r\n            \"30\",\r\n            \"30\",\r\n            \"30\",\r\n            \"33\"\r\n        ],\r\n        [\r\n            \"MCHC\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"34.7\",\r\n            \"33.6\",\r\n            \"35.7\",\r\n            \"g/dL\",\r\n            \"\",\r\n            \"35\",\r\n            \"35\",\r\n            \"35\",\r\n            \"34\"\r\n        ],\r\n        [\r\n            \"Platelet\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"283.0\",\r\n            \"95.0\",\r\n            \"471.0\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"115\",\r\n            \"100\",\r\n            \"100\",\r\n            \"301\"\r\n        ],\r\n        [\r\n            \"RDW-SD\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"50.3\",\r\n            \"34.9\",\r\n            \"65.7\",\r\n            \"fL\",\r\n            \"\",\r\n            \"60\",\r\n            \"60\",\r\n            \"60\",\r\n            \"39\"\r\n        ],\r\n        [\r\n            \"RDW-CV\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"15.8\",\r\n            \"13.3\",\r\n            \"18.2\",\r\n            \"%\",\r\n            \"\",\r\n            \"15\",\r\n            \"15\",\r\n            \"15\",\r\n            \"14\"\r\n        ],\r\n        [\r\n            \"MPV\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"8.6\",\r\n            \"7.3\",\r\n            \"9.9\",\r\n            \"fL\",\r\n            \"\",\r\n            \"9\",\r\n            \"9\",\r\n            \"9\",\r\n            \"8\"\r\n        ],\r\n        [\r\n            \"Neutrophils no.\",\r\n            \"Neutrophils #\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"6.8\",\r\n            \"2.2\",\r\n            \"11.4\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"3\",\r\n            \"5\",\r\n            \"3\",\r\n            \"4\"\r\n        ],\r\n        [\r\n            \"Lymphocytes no.\",\r\n            \"Lymphocytes #\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"3.5\",\r\n            \"1.2\",\r\n            \"5.7\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"5\",\r\n            \"5\",\r\n            \"5\",\r\n            \"2\"\r\n        ],\r\n        [\r\n            \"Monocytes no.\",\r\n            \"Monocytes #\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"2.6\",\r\n            \"0.1\",\r\n            \"5.0\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"5\",\r\n            \"5\",\r\n            \"5\",\r\n            \"4\"\r\n        ],\r\n        [\r\n            \"Eosinophils no.\",\r\n            \"Eosinophils #\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.3\",\r\n            \"0.0\",\r\n            \"0.5\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"0.5\",\r\n            \"0.5\",\r\n            \"0.5\",\r\n            \"0\"\r\n        ],\r\n        [\r\n            \"Basophils no.\",\r\n            \"Basophils #\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.0\",\r\n            \"0.1\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.1\",\r\n            \"0.1\",\r\n            \"0\"\r\n        ],\r\n        [\r\n            \"Neutrophils percent\",\r\n            \"Neutrophils %\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"42.0\",\r\n            \"14.6\",\r\n            \"69.3\",\r\n            \"%\",\r\n            \"\",\r\n            \"69\",\r\n            \"69\",\r\n            \"69\",\r\n            \"45\"\r\n        ],\r\n        [\r\n            \"Lymphocytes percent\",\r\n            \"Lymphocytes %\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"39.0\",\r\n            \"8.0\",\r\n            \"70.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"70\",\r\n            \"70\",\r\n            \"70\",\r\n            \"55\"\r\n        ],\r\n        [\r\n            \"Monocytes percent\",\r\n            \"Monocytes %\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"11.5\",\r\n            \"4.0\",\r\n            \"19.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"19\",\r\n            \"19\",\r\n            \"19\",\r\n            \"4\"\r\n        ],\r\n        [\r\n            \"Eosinophils percent\",\r\n            \"Eosinophils %\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"4.0\",\r\n            \"1.0\",\r\n            \"7.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"7\",\r\n            \"7\",\r\n            \"7\",\r\n            \"4\"\r\n        ],\r\n        [\r\n            \"Basophils percent\",\r\n            \"Basophils %\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.5\",\r\n            \"0.0\",\r\n            \"1.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"1\",\r\n            \"1\",\r\n            \"0\"\r\n        ],\r\n        [\r\n            \"IG no.\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.0\",\r\n            \"0.28\",\r\n            \"x 10^3/μL%\",\r\n            \"\",\r\n            \"0.2\",\r\n            \"0.2\",\r\n            \"0.2\",\r\n            \"0\"\r\n        ],\r\n        [\r\n            \"IG percent\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.9\",\r\n            \"0.0\",\r\n            \"1.7\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"1\",\r\n            \"1\",\r\n            \"0\"\r\n        ],\r\n        [\r\n            \"RET no.\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"74.5\",\r\n            \"29.0\",\r\n            \"120.0\",\r\n            \"x 10^6/μL\",\r\n            \"\",\r\n            \"100\",\r\n            \"100\",\r\n            \"100\",\r\n            \"105\"\r\n        ],\r\n        [\r\n            \"RET percent\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-002\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"2.6\",\r\n            \"0.4\",\r\n            \"4.8\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"1\",\r\n            \"1\",\r\n            \"2\"\r\n        ],\r\n        [\r\n            \"P12345\",\r\n            \"\",\r\n            \"\",\r\n            \"PASample\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"Err-range\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"8/1/2023 11:27:55; 9/1/2023 1:27:56; \",\r\n            \"9/18/2023 0:00:00\",\r\n            \"8/1/2023 11:27:55\",\r\n            \"9/1/2023 1:27:56\"\r\n        ],\r\n        [\r\n            \"Patient id\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"PatientInfo\",\r\n            \"\",\r\n            \"MRN\"\r\n        ],\r\n        [\r\n            \"name\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"PatientInfo\",\r\n            \"\",\r\n            \"Jon Doe\"\r\n        ],\r\n        [\r\n            \"sex\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"PatientInfo\",\r\n            \"\",\r\n            \"M\"\r\n        ],\r\n        [\r\n            \"age\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"PatientInfo\",\r\n            \"\",\r\n            \"50\"\r\n        ],\r\n        [\r\n            \"ward\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"PatientInfo\",\r\n            \"\",\r\n            \"7\"\r\n        ],\r\n        [\r\n            \"doctor\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"PatientInfo\",\r\n            \"\",\r\n            \"M.D\"\r\n        ],\r\n        [\r\n            \"Cell Pack DCL\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"ReagentInfo\",\r\n            \"\",\r\n            \"Y3006\"\r\n        ],\r\n        [\r\n            \"Sulfoyser\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"ReagentInfo\",\r\n            \"\",\r\n            \"A2014\"\r\n        ],\r\n        [\r\n            \"Lysercell WDF\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"ReagentInfo\",\r\n            \"\",\r\n            \"Y2061\"\r\n        ],\r\n        [\r\n            \"Validated\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"RunInfo\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"V\",\r\n            \"V\"\r\n        ],\r\n        [\r\n            \"Output\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"RunInfo\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"GH\",\r\n            \"G\"\r\n        ],\r\n        [\r\n            \"P / N\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"RunInfo\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"M\"\r\n        ],\r\n        [\r\n            \"Rack no.\",\r\n            \"Rack #\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"RunInfo\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"2\"\r\n        ],\r\n        [\r\n            \"Position\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"RunInfo\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"1\"\r\n        ],\r\n        [\r\n            \"Action\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"RunInfo\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"-\",\r\n            \"-\"\r\n        ],\r\n        [\r\n            \"Error\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"RunInfo\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"-\",\r\n            \"-\"\r\n        ],\r\n        [\r\n            \"Scatterplot\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"RunInfo\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"file name source path\",\r\n            \"file name source path\",\r\n            \"file name source path\"\r\n        ],\r\n        [\r\n            \"WBC\",\r\n            \"WBC<sup>+4</sup>\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"11.3\",\r\n            \"5.9\",\r\n            \"16.7\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"6\",\r\n            \"7\"\r\n        ],\r\n        [\r\n            \"RBC\",\r\n            \"RBC<sup>+4</sup>\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"4.2\",\r\n            \"3.2\",\r\n            \"5.1\",\r\n            \"x 10^6/μL\",\r\n            \"\",\r\n            \"4\",\r\n            \"5\"\r\n        ],\r\n        [\r\n            \"Hemoglobin\",\r\n            \"HGB<sup>+4</sup>\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"13.4\",\r\n            \"10.2\",\r\n            \"16.6\",\r\n            \"g/dL\",\r\n            \"\",\r\n            \"11\",\r\n            \"12\"\r\n        ],\r\n        [\r\n            \"Hematocrit\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"38.4\",\r\n            \"29.1\",\r\n            \"47.7\",\r\n            \"%\",\r\n            \"\",\r\n            \"30\",\r\n            \"31\"\r\n        ],\r\n        [\r\n            \"MCV\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"91.0\",\r\n            \"75.6\",\r\n            \"106.3\",\r\n            \"fL\",\r\n            \"\",\r\n            \"100\",\r\n            \"101\"\r\n        ],\r\n        [\r\n            \"MCH\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"31.2\",\r\n            \"26.0\",\r\n            \"36.4\",\r\n            \"pg\",\r\n            \"\",\r\n            \"30\",\r\n            \"31\"\r\n        ],\r\n        [\r\n            \"MCHC\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"34.7\",\r\n            \"33.6\",\r\n            \"35.7\",\r\n            \"g/dL\",\r\n            \"\",\r\n            \"35\",\r\n            \"36\"\r\n        ],\r\n        [\r\n            \"Platelet\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"283.0\",\r\n            \"95.0\",\r\n            \"471.0\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"100\",\r\n            \"101\"\r\n        ],\r\n        [\r\n            \"RDW-SD\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"50.3\",\r\n            \"34.9\",\r\n            \"65.7\",\r\n            \"fL\",\r\n            \"\",\r\n            \"60\",\r\n            \"61\"\r\n        ],\r\n        [\r\n            \"RDW-CV\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"15.8\",\r\n            \"13.3\",\r\n            \"18.2\",\r\n            \"%\",\r\n            \"\",\r\n            \"15\",\r\n            \"16\"\r\n        ],\r\n        [\r\n            \"MPV\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"8.6\",\r\n            \"7.3\",\r\n            \"9.9\",\r\n            \"fL\",\r\n            \"\",\r\n            \"9\",\r\n            \"10\"\r\n        ],\r\n        [\r\n            \"Neutrophils no.\",\r\n            \"Neutrophils #\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"6.8\",\r\n            \"2.2\",\r\n            \"11.4\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"3\",\r\n            \"4\"\r\n        ],\r\n        [\r\n            \"Lymphocytes no.\",\r\n            \"Lymphocytes #\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"3.5\",\r\n            \"1.2\",\r\n            \"5.7\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"5\",\r\n            \"6\"\r\n        ],\r\n        [\r\n            \"Monocytes no.\",\r\n            \"Monocytes #\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"2.6\",\r\n            \"0.1\",\r\n            \"5.0\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"5\",\r\n            \"6\"\r\n        ],\r\n        [\r\n            \"Eosinophils no.\",\r\n            \"Eosinophils #\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.3\",\r\n            \"0.0\",\r\n            \"0.5\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"0.5\",\r\n            \"1.5\"\r\n        ],\r\n        [\r\n            \"Basophils no.\",\r\n            \"Basophils #\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.0\",\r\n            \"0.1\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"1.1\"\r\n        ],\r\n        [\r\n            \"Neutrophils percent\",\r\n            \"Neutrophils %\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"42.0\",\r\n            \"14.6\",\r\n            \"69.3\",\r\n            \"%\",\r\n            \"\",\r\n            \"69\",\r\n            \"70\"\r\n        ],\r\n        [\r\n            \"Lymphocytes percent\",\r\n            \"Lymphocytes %\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"39.0\",\r\n            \"8.0\",\r\n            \"70.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"70\",\r\n            \"71\"\r\n        ],\r\n        [\r\n            \"Monocytes percent\",\r\n            \"Monocytes %\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"11.5\",\r\n            \"4.0\",\r\n            \"19.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"19\",\r\n            \"20\"\r\n        ],\r\n        [\r\n            \"Eosinophils percent\",\r\n            \"Eosinophils %\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"4.0\",\r\n            \"1.0\",\r\n            \"7.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"7\",\r\n            \"8\"\r\n        ],\r\n        [\r\n            \"Basophils percent\",\r\n            \"Basophils %\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.5\",\r\n            \"0.0\",\r\n            \"1.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"2\"\r\n        ],\r\n        [\r\n            \"IG no.\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.0\",\r\n            \"0.28\",\r\n            \"x 10^3/μL%\",\r\n            \"\",\r\n            \"0.2\",\r\n            \"1.2\"\r\n        ],\r\n        [\r\n            \"IG percent\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.9\",\r\n            \"0.0\",\r\n            \"1.7\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"2\"\r\n        ],\r\n        [\r\n            \"RET no.\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"74.5\",\r\n            \"29.0\",\r\n            \"120.0\",\r\n            \"x 10^6/μL\",\r\n            \"\",\r\n            \"100\",\r\n            \"101\"\r\n        ],\r\n        [\r\n            \"RET percent\",\r\n            \"\",\r\n            \"\",\r\n            \"P12345\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"2.6\",\r\n            \"0.4\",\r\n            \"4.8\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"2\"\r\n        ],\r\n        [\r\n            \"QC-003\",\r\n            \"\",\r\n            \"\",\r\n            \"QCSample\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"Err-range\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"8/1/2023 9:00:00; 9/9/2023 9:00:00\",\r\n            \"9/18/2023 0:00:00\",\r\n            \"8/1/2023 9:00:00\",\r\n            \"9/9/2023 9:00:00\"\r\n        ],\r\n        [\r\n            \"Material\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"SampleInfo\",\r\n            \"\",\r\n            \"XN-L Control Level 3\"\r\n        ],\r\n        [\r\n            \"Expiry Date\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"SampleInfo\",\r\n            \"\",\r\n            \"31/08/2023\"\r\n        ],\r\n        [\r\n            \"Cell Pack DCL\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"ReagentInfo\",\r\n            \"\",\r\n            \"qc-003 reagent\"\r\n        ],\r\n        [\r\n            \"Validated\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Output\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"P / N\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Rack no.\",\r\n            \"Rack #\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Position\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Action\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"Error\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"RunInfo\"\r\n        ],\r\n        [\r\n            \"WBC\",\r\n            \"WBC<sup>+4</sup>\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"11.3\",\r\n            \"5.9\",\r\n            \"16.7\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"7\",\r\n            \"4\",\r\n            \"10\"\r\n        ],\r\n        [\r\n            \"RBC\",\r\n            \"RBC<sup>+4</sup>\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"4.2\",\r\n            \"3.2\",\r\n            \"5.1\",\r\n            \"x 10^6/μL\",\r\n            \"\",\r\n            \"4\",\r\n            \"4\",\r\n            \"4\"\r\n        ],\r\n        [\r\n            \"Hemoglobin\",\r\n            \"HGB<sup>+4</sup>\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"13.4\",\r\n            \"10.2\",\r\n            \"16.6\",\r\n            \"g/dL\",\r\n            \"\",\r\n            \"11\",\r\n            \"11\",\r\n            \"11\"\r\n        ],\r\n        [\r\n            \"Hematocrit\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"38.4\",\r\n            \"29.1\",\r\n            \"47.7\",\r\n            \"%\",\r\n            \"\",\r\n            \"30\",\r\n            \"30\",\r\n            \"30\"\r\n        ],\r\n        [\r\n            \"MCV\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"91.0\",\r\n            \"75.6\",\r\n            \"106.3\",\r\n            \"fL\",\r\n            \"\",\r\n            \"100\",\r\n            \"100\",\r\n            \"100\"\r\n        ],\r\n        [\r\n            \"MCH\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"31.2\",\r\n            \"26.0\",\r\n            \"36.4\",\r\n            \"pg\",\r\n            \"\",\r\n            \"30\",\r\n            \"30\",\r\n            \"30\"\r\n        ],\r\n        [\r\n            \"MCHC\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"34.7\",\r\n            \"33.6\",\r\n            \"35.7\",\r\n            \"g/dL\",\r\n            \"\",\r\n            \"35\",\r\n            \"35\",\r\n            \"35\"\r\n        ],\r\n        [\r\n            \"Platelet\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"283.0\",\r\n            \"95.0\",\r\n            \"471.0\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"115\",\r\n            \"100\",\r\n            \"100\"\r\n        ],\r\n        [\r\n            \"RDW-SD\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"50.3\",\r\n            \"34.9\",\r\n            \"65.7\",\r\n            \"fL\",\r\n            \"\",\r\n            \"60\",\r\n            \"60\",\r\n            \"60\"\r\n        ],\r\n        [\r\n            \"RDW-CV\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"15.8\",\r\n            \"13.3\",\r\n            \"18.2\",\r\n            \"%\",\r\n            \"\",\r\n            \"15\",\r\n            \"15\",\r\n            \"15\"\r\n        ],\r\n        [\r\n            \"MPV\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"8.6\",\r\n            \"7.3\",\r\n            \"9.9\",\r\n            \"fL\",\r\n            \"\",\r\n            \"9\",\r\n            \"9\",\r\n            \"9\"\r\n        ],\r\n        [\r\n            \"Neutrophils no.\",\r\n            \"Neutrophils #\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"6.8\",\r\n            \"2.2\",\r\n            \"11.4\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"3\",\r\n            \"5\",\r\n            \"3\"\r\n        ],\r\n        [\r\n            \"Lymphocytes no.\",\r\n            \"Lymphocytes #\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"3.5\",\r\n            \"1.2\",\r\n            \"5.7\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"5\",\r\n            \"5\",\r\n            \"5\"\r\n        ],\r\n        [\r\n            \"Monocytes no.\",\r\n            \"Monocytes #\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"2.6\",\r\n            \"0.1\",\r\n            \"5.0\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"5\",\r\n            \"5\",\r\n            \"5\"\r\n        ],\r\n        [\r\n            \"Eosinophils no.\",\r\n            \"Eosinophils #\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.3\",\r\n            \"0.0\",\r\n            \"0.5\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"0.5\",\r\n            \"0.5\",\r\n            \"0.5\"\r\n        ],\r\n        [\r\n            \"Basophils no.\",\r\n            \"Basophils #\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.0\",\r\n            \"0.1\",\r\n            \"x 10^3/μL\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.1\",\r\n            \"0.1\"\r\n        ],\r\n        [\r\n            \"Neutrophils percent\",\r\n            \"Neutrophils %\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"42.0\",\r\n            \"14.6\",\r\n            \"69.3\",\r\n            \"%\",\r\n            \"\",\r\n            \"69\",\r\n            \"69\",\r\n            \"69\"\r\n        ],\r\n        [\r\n            \"Lymphocytes percent\",\r\n            \"Lymphocytes %\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"39.0\",\r\n            \"8.0\",\r\n            \"70.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"70\",\r\n            \"70\",\r\n            \"70\"\r\n        ],\r\n        [\r\n            \"Monocytes percent\",\r\n            \"Monocytes %\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"11.5\",\r\n            \"4.0\",\r\n            \"19.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"19\",\r\n            \"19\",\r\n            \"19\"\r\n        ],\r\n        [\r\n            \"Eosinophils percent\",\r\n            \"Eosinophils %\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"4.0\",\r\n            \"1.0\",\r\n            \"7.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"7\",\r\n            \"7\",\r\n            \"7\"\r\n        ],\r\n        [\r\n            \"Basophils percent\",\r\n            \"Basophils %\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.5\",\r\n            \"0.0\",\r\n            \"1.0\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"1\",\r\n            \"1\"\r\n        ],\r\n        [\r\n            \"IG no.\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.1\",\r\n            \"0.0\",\r\n            \"0.28\",\r\n            \"x 10^3/μL%\",\r\n            \"\",\r\n            \"0.2\",\r\n            \"0.2\",\r\n            \"0.2\"\r\n        ],\r\n        [\r\n            \"IG percent\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"0.9\",\r\n            \"0.0\",\r\n            \"1.7\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"1\",\r\n            \"1\"\r\n        ],\r\n        [\r\n            \"RET no.\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"74.5\",\r\n            \"29.0\",\r\n            \"120.0\",\r\n            \"x 10^6/μL\",\r\n            \"\",\r\n            \"100\",\r\n            \"100\",\r\n            \"100\"\r\n        ],\r\n        [\r\n            \"RET percent\",\r\n            \"\",\r\n            \"\",\r\n            \"QC-003\",\r\n            \"HAParameter\",\r\n            \"\",\r\n            \"\",\r\n            \"2.6\",\r\n            \"0.4\",\r\n            \"4.8\",\r\n            \"%\",\r\n            \"\",\r\n            \"1\",\r\n            \"1\",\r\n            \"1\"\r\n        ]\r\n    ]\r\n};\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineGraph = void 0;\r\nconst auto_1 = __importDefault(require(\"chart.js/auto\"));\r\n/**\r\n * Creates a line graph row and addes to the graphscontainer element.\r\n * @param chartData data for the chart\r\n * @param graphscontainerID id of the container element, default is 'graphscontainer'\r\n */\r\nclass LineGraph {\r\n    constructor(chartData) {\r\n        this.data = chartData;\r\n    }\r\n    /** Create HTML elements for .graphrow with the structure\r\n     *  <div class=\"graphrow\">\r\n            <div class=\"_yTitle\"></div>\r\n            <div class=\"graph\"><canvas id=\"{{graphid}}\"></canvas></div>\r\n            <div class=\"dataSummary\">\r\n            </div>\r\n        </div>\r\n     */\r\n    UICreateGraphRowHTML(graphId) {\r\n        const graphRow = document.createElement('div');\r\n        graphRow.classList.add('graphrow');\r\n        const titleCol = document.createElement('div');\r\n        const yTitle = document.createElement('div');\r\n        yTitle.classList.add('_yTitle', 'ytitle');\r\n        titleCol.classList.add('titleCol');\r\n        titleCol.appendChild(yTitle);\r\n        graphRow.appendChild(titleCol);\r\n        const graph = document.createElement('div');\r\n        graph.classList.add('graph');\r\n        graphRow.appendChild(graph);\r\n        const canvas = document.createElement('canvas');\r\n        canvas.setAttribute('id', graphId);\r\n        graph.appendChild(canvas);\r\n        const dataSummary = document.createElement('div');\r\n        dataSummary.classList.add('dataSummary');\r\n        graphRow.appendChild(dataSummary);\r\n        const table = document.createElement('table');\r\n        dataSummary.appendChild(table);\r\n        table.appendChild(this.UICreateDataStatsTableHTML());\r\n        // set the title\r\n        this.titleHTML = yTitle;\r\n        this.canvas = canvas;\r\n        return graphRow;\r\n    }\r\n    /** Create HTML for table for statistics, with the structure:\r\n     *  <table>\r\n            <tr>\r\n                <td class=\"_cur\" rowspan=\"3\"></td>\r\n                <td class=\"_sd\"></td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"_mean\"></td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"_cv\"></td>\r\n            </tr>\r\n        </table>\r\n     */\r\n    UICreateDataStatsTableHTML() {\r\n        const table = document.createElement('table');\r\n        const tr1 = document.createElement('tr');\r\n        const td1_cur = document.createElement('td');\r\n        td1_cur.classList.add('_cur');\r\n        td1_cur.setAttribute('rowspan', '3');\r\n        tr1.appendChild(td1_cur);\r\n        const td2_sd = document.createElement('td');\r\n        td2_sd.classList.add('_sd');\r\n        tr1.appendChild(td2_sd);\r\n        table.appendChild(tr1);\r\n        const tr2 = document.createElement('tr');\r\n        const td3_mean = document.createElement('td');\r\n        td3_mean.classList.add('_mean');\r\n        tr2.appendChild(td3_mean);\r\n        table.appendChild(tr2);\r\n        const tr3 = document.createElement('tr');\r\n        const td4_cv = document.createElement('td');\r\n        td4_cv.classList.add('_cv');\r\n        tr3.appendChild(td4_cv);\r\n        table.appendChild(tr3);\r\n        // set stats data\r\n        this.stat_meanHTML = td3_mean;\r\n        this.stat_curHTML = td1_cur;\r\n        this.stat_sdHTML = td2_sd;\r\n        this.stat_cvHTML = td4_cv;\r\n        return table;\r\n    }\r\n    /** Create a line graph with chartjs\r\n     * @param canvasId id of the canvas element\r\n     * @param yMin minimum value of the y-axis\r\n     * @param yMax maximum value of the y-axis\r\n     * @param xData array of x-values\r\n     * @param yData array of y-values\r\n    */\r\n    CreateLineChart(chartData) {\r\n        const yMin = chartData.yMin, yMax = chartData.yMax, xData = chartData.xData, yData = chartData.yData;\r\n        const canvas = this.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        const isHeadingRow = chartData.canvasId === 'headingRow';\r\n        if (!ctx) {\r\n            console.error('Canvas context not supported.');\r\n            return;\r\n        }\r\n        const target = (yMax + yMin) / 2;\r\n        const data = {\r\n            labels: xData,\r\n            datasets: [{\r\n                    data: yData.map((v, i) => (v < yMin ? yMin : v > yMax ? yMax : v)),\r\n                    pointBackgroundColor: function (context) {\r\n                        // draw outofbounds values in red \r\n                        var value = yData[context.dataIndex];\r\n                        return value < yMin || value > yMax ? 'red' : 'green';\r\n                    },\r\n                    pointStyle: function (context) {\r\n                        // draw outofbounds values as a rotated rectangle\r\n                        var value = yData[context.dataIndex];\r\n                        return value < yMin || value > yMax ? 'rectRot' : 'rect';\r\n                    }\r\n                }]\r\n        };\r\n        auto_1.default.defaults.plugins.legend.display = false;\r\n        auto_1.default.defaults.elements.line.borderWidth = 1;\r\n        auto_1.default.defaults.maintainAspectRatio = false;\r\n        auto_1.default.defaults.elements.point.hitRadius = 2;\r\n        auto_1.default.defaults.elements.point.radius = 5;\r\n        auto_1.default.defaults.backgroundColor = '#9BD0F5';\r\n        const chart = new auto_1.default(ctx, {\r\n            type: 'line',\r\n            data: data,\r\n            options: {\r\n                responsive: true,\r\n                scales: {\r\n                    x: {\r\n                        ticks: {\r\n                            display: false //this will remove only the label\r\n                        }\r\n                    },\r\n                    y: {\r\n                        title: { display: false },\r\n                        min: yMin,\r\n                        max: yMax,\r\n                        offset: true,\r\n                        alignToPixels: true,\r\n                        backgroundColor: 'rgba(220, 250, 250, 0.5)',\r\n                        ticks: {\r\n                            stepSize: target,\r\n                            major: {\r\n                                enabled: true\r\n                            },\r\n                            display: true,\r\n                            padding: 0,\r\n                            callback: function (val, index) {\r\n                                const targW = 40;\r\n                                let num = Number(val).toFixed(1).trim();\r\n                                if (isHeadingRow) {\r\n                                    //console.log(index,val, target, num);\r\n                                    num = (index === 0) ? 'min' : (index === 1) ? 'target' : 'max';\r\n                                }\r\n                                // ensure y tick labels are same width so graphs align\r\n                                let w = ctx.measureText(num).width;\r\n                                while (w < targW) {\r\n                                    num = num + ' ';\r\n                                    w = ctx.measureText(num).width;\r\n                                }\r\n                                return num;\r\n                            }\r\n                        },\r\n                        grid: {\r\n                            display: !(isHeadingRow)\r\n                        }\r\n                    }\r\n                },\r\n                interaction: {\r\n                    mode: 'point'\r\n                },\r\n                plugins: {\r\n                    tooltip: {\r\n                        callbacks: {\r\n                            label: function (context) {\r\n                                return yData[context.dataIndex].toString();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return chart;\r\n    }\r\n    // helper math functions\r\n    getMean(array) {\r\n        const n = array.length;\r\n        return array.reduce((a, b) => a + b) / n;\r\n    }\r\n    getStandardDeviation(array) {\r\n        const n = array.length;\r\n        const mean = this.getMean(array);\r\n        return Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\r\n    }\r\n    getCV(array) {\r\n        const mean = this.getMean(array);\r\n        const sd = this.getStandardDeviation(array);\r\n        return sd / mean;\r\n    }\r\n    CreateGraphHeader() {\r\n        const row = this.UICreateGraphRowHTML(this.data.canvasId);\r\n        this.chart = this.CreateLineChart(this.data);\r\n        this.titleHTML.innerHTML = this.data.yTitle;\r\n        this.stat_sdHTML.innerHTML = this.data.sd.toString();\r\n        this.stat_meanHTML.innerHTML = this.data.mean.toString();\r\n        this.stat_cvHTML.innerHTML = this.data.cv.toString();\r\n        this.stat_curHTML.innerHTML = \"Data\";\r\n        return row;\r\n    }\r\n    CreateGraphRow(chartData = this.data) {\r\n        const row = this.UICreateGraphRowHTML(chartData.canvasId);\r\n        this.chart = this.CreateLineChart(chartData);\r\n        // set title\r\n        this.titleHTML.innerHTML = this.data.yTitle;\r\n        this.stat_sdHTML.innerHTML = this.data.sd.toString();\r\n        this.stat_meanHTML.innerHTML = this.data.mean.toString();\r\n        this.stat_cvHTML.innerHTML = this.data.cv.toString();\r\n        this.stat_curHTML.innerHTML = this.data.yData[this.data.yData.length - 1].toString();\r\n        return row;\r\n    }\r\n    /** Update the graph with new point */\r\n    AddDataPoint(xData = '', v) {\r\n        const chart = this.chart;\r\n        // newy - the value that is plotted on the chart if out of range\r\n        const newy = v < this.data.yMin ? this.data.yMin : v > this.data.yMax ? this.data.yMax : v;\r\n        if (xData.length > 0) {\r\n            this.data.yData.push(v);\r\n            this.data.xData.push(xData);\r\n            chart.data.labels.push(xData);\r\n            chart.data.datasets[0].data.push(newy);\r\n            chart.update();\r\n        }\r\n    }\r\n}\r\nexports.LineGraph = LineGraph;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.UICreateQCFileTableDataRows = void 0;\r\nconst UICreateLineGraph_1 = require(\"../Graph/UICreateLineGraph\");\r\nconst GetGSheetsData_1 = require(\"../Data/GetGSheetsData\");\r\n/** Row Click hanlder: Creates Graphs for parameters of itemid  */\r\nfunction GraphQCFile(itemid = 'QC-001', fileInfo = {}) {\r\n    const graphscontainerID = 'graphscontainer';\r\n    const container = document.getElementById(graphscontainerID);\r\n    if (!container) {\r\n        console.error('Graphs container not found.');\r\n    }\r\n    const subgroup = 'HAParameter';\r\n    let data = (0, GetGSheetsData_1.GetData)();\r\n    data.then((data) => {\r\n        container.innerHTML = \"\";\r\n        if (data !== null) {\r\n            // filter data for the first Item = itemid\r\n            const parentItem = data.find((item) => item['Item'] === itemid);\r\n            const analysisdates = parentItem['Analysis dates -->'];\r\n            const xData = analysisdates.split(';');\r\n            // create header row container div class graphrowheader for fileInfo\r\n            const fileInfoContainer = document.createElement('div');\r\n            fileInfoContainer.setAttribute('class', 'graphrowheader');\r\n            container === null || container === void 0 ? void 0 : container.appendChild(fileInfoContainer);\r\n            // foreach fileInfo, create div class graphrowheaderitem\r\n            for (const [key, value] of Object.entries(fileInfo)) {\r\n                let graphrowheaderitem = document.createElement('div');\r\n                graphrowheaderitem.setAttribute('class', 'graphrowheaderitem');\r\n                graphrowheaderitem.innerText = `${key}: ${value}`;\r\n                fileInfoContainer.appendChild(graphrowheaderitem);\r\n            }\r\n            // filter data for items that have Groups= itemid and subgroup = 'HA Praameter'\r\n            let paramerterData = data.filter((item) => {\r\n                return item['Groups'] === itemid && item['Subgroup'] === subgroup;\r\n            });\r\n            // create heading row for graph\r\n            const headingRow = new UICreateLineGraph_1.LineGraph({\r\n                canvasId: 'headingRow',\r\n                xData: [],\r\n                yData: [],\r\n                yTitle: 'Item',\r\n                yMin: 0,\r\n                yMax: 1,\r\n                sd: \"sd\",\r\n                mean: \"mean\",\r\n                cv: \"cv\"\r\n            });\r\n            container === null || container === void 0 ? void 0 : container.appendChild(headingRow.CreateGraphHeader());\r\n            // for each parameterData, create new LineGraph\r\n            paramerterData.forEach((item) => {\r\n                const id = item['Item'].toLowerCase().replace(/[^A-Z0-9]/ig, '');\r\n                const yData = xData.map((s, i) => {\r\n                    let dateHeader = 'Date' + (i + 1);\r\n                    return Number(item[dateHeader]);\r\n                });\r\n                const yTitle = item['Label'].length > 0 ? item['Label'] : item['Item'];\r\n                const yMin = Number(item['AllowedMin']);\r\n                const yMax = Number(item['AllowedMax']); //console.log(xData);\r\n                const sd = Number(item['SD']);\r\n                const mean = Number(item['Mean']);\r\n                const cv = Number(item['CV']);\r\n                const chartData = {\r\n                    canvasId: id,\r\n                    xData: xData,\r\n                    yData: yData,\r\n                    yTitle: yTitle,\r\n                    yMin: yMin,\r\n                    yMax: yMax,\r\n                    sd: sd,\r\n                    mean: mean,\r\n                    cv: cv\r\n                };\r\n                const chart = new UICreateLineGraph_1.LineGraph(chartData);\r\n                container === null || container === void 0 ? void 0 : container.appendChild(chart.CreateGraphRow());\r\n            });\r\n        }\r\n    });\r\n}\r\n/** Populates table from GetData where Groups=\"QCSample\" = table row\r\n * Expected table <th>s: File, Lot#, Material, Exp. Date, Analysis dates\r\n*/\r\nfunction UICreateQCFileTableDataRows(table) {\r\n    const maxRows = 1000;\r\n    const data = (0, GetGSheetsData_1.GetData)();\r\n    const tbody = document.createElement('tbody');\r\n    table.appendChild(tbody);\r\n    data.then((data) => {\r\n        if (data !== null) {\r\n            // filter data for items that have Groups=\"QCSample\"\r\n            let sampleData = data.filter((row) => {\r\n                return row['Groups'] === 'QCSample';\r\n            });\r\n            // create row for each sampleData where \r\n            // td1 = autogenerated line number\r\n            // td2 = Label or Item\r\n            // td(n) = lookup data Description where subgroup=SampleInfo, Groups=Item, Item=headingInfoUnique\r\n            // td(last) = last column is the item's most recent analysis date\r\n            sampleData.forEach((item, i) => {\r\n                let tableRowInfo = {};\r\n                let tr = document.createElement('tr');\r\n                tbody.appendChild(tr);\r\n                let td1text_fileNo = \"QC\" + (i + 1).toString().padStart(maxRows.toString().length, '0');\r\n                let td2text_lotNo = item['Label'].length > 0 ? item['Label'] : item['Item'];\r\n                tableRowInfo[\"File\"] = td1text_fileNo;\r\n                tableRowInfo[\"Lot #\"] = td2text_lotNo;\r\n                tableRowInfo[\"Material\"] = data.filter((row) => row['Subgroup'] === 'SampleInfo' && row['Groups'] === item['Item'] && row['Item'] === 'Material')[0]['Description'];\r\n                tableRowInfo[\"Expiry Date\"] = data.filter((row) => row['Subgroup'] === 'SampleInfo' && row['Groups'] === item['Item'] && row['Item'] === 'Expiry Date')[0]['Description'];\r\n                let analysisdates = item['Analysis dates -->'];\r\n                let analysisdatesArray = analysisdates.split(';');\r\n                let analysisdate = analysisdatesArray[analysisdatesArray.length - 1];\r\n                // add td content to table row\r\n                let td0 = document.createElement('td'); // Error warning\r\n                td0.innerHTML = item['Status'] != 'OK' ? '&#9888;' : '';\r\n                tr.appendChild(td0);\r\n                let td1 = document.createElement('td'); // File\r\n                td1.innerText = td1text_fileNo;\r\n                tr.appendChild(td1);\r\n                let td2 = document.createElement('td'); // Lot #\r\n                td2.innerText = td2text_lotNo;\r\n                tr.appendChild(td2);\r\n                let td3 = document.createElement('td'); // Material\r\n                td3.innerText = tableRowInfo[\"Material\"];\r\n                tr.appendChild(td3);\r\n                let td4 = document.createElement('td'); // Expiry Date\r\n                td4.innerText = tableRowInfo[\"Expiry Date\"];\r\n                tr.appendChild(td4);\r\n                let td5 = document.createElement('td'); // Analysis Date\r\n                td5.innerText = analysisdate;\r\n                tr.appendChild(td5);\r\n                // add click event to each row\r\n                tr.addEventListener('click', function () {\r\n                    var _a;\r\n                    GraphQCFile(item['Item'], tableRowInfo);\r\n                    // hide table\r\n                    table.style.display = 'none';\r\n                    // add back button that shows table\r\n                    const backbutton = document.createElement('button');\r\n                    backbutton.innerHTML = \"&#9668 Back\";\r\n                    backbutton.addEventListener('click', function () {\r\n                        var _a;\r\n                        table.style.display = 'table';\r\n                        document.getElementById('graphscontainer').innerHTML = \"\";\r\n                        (_a = document.getElementById('top-menu')) === null || _a === void 0 ? void 0 : _a.removeChild(backbutton);\r\n                    });\r\n                    (_a = document.getElementById('top-menu')) === null || _a === void 0 ? void 0 : _a.appendChild(backbutton);\r\n                });\r\n            });\r\n            // create remaining empty rows\r\n            for (let i = sampleData.length; i < maxRows; i++) {\r\n                let tr = document.createElement('tr');\r\n                tbody.appendChild(tr);\r\n                let td0 = document.createElement('td'); // Error warning\r\n                td0.innerHTML = '';\r\n                tr.appendChild(td0);\r\n                let td1 = document.createElement('td'); // File\r\n                td1.innerText = \"QC\" + (i + 1).toString().padStart(maxRows.toString().length, '0');\r\n                tr.appendChild(td1);\r\n                let td2 = document.createElement('td'); // Lot #\r\n                td2.innerText = \"\";\r\n                tr.appendChild(td2);\r\n                let td3 = document.createElement('td'); // Material\r\n                td3.innerText = \"\";\r\n                tr.appendChild(td3);\r\n                let td4 = document.createElement('td'); // Expiry Date\r\n                td4.innerText = \"\";\r\n                tr.appendChild(td4);\r\n                let td5 = document.createElement('td'); // Analysis Date\r\n                td5.innerText = \"\";\r\n                tr.appendChild(td5);\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.UICreateQCFileTableDataRows = UICreateQCFileTableDataRows;\r\n/**Returns the HTML table:\r\n <table id=\"qcfiletable\" class=\"table\" style=\"display: table\">\r\n    <thead>\r\n        <tr>\r\n        <th>File</th>\r\n        <th>Lot #</th>\r\n        <th>Material</th>\r\n        <th>Expiry Date</th>\r\n        <th>Analysis Date</th>\r\n        </tr>\r\n    </thead>\r\n</table>\r\n */\r\nfunction UICreateQCFileTable() {\r\n    const maxRows = 100;\r\n    const data = (0, GetGSheetsData_1.GetData)();\r\n    // create table\r\n    const table = document.createElement('table');\r\n    table.setAttribute('id', 'qcfiletable');\r\n    table.setAttribute('class', 'table');\r\n    // create table header\r\n    const thead = document.createElement('thead');\r\n    const tr = document.createElement('tr');\r\n    thead.appendChild(tr);\r\n    table.appendChild(thead);\r\n    const tbody = document.createElement('tbody');\r\n    table.appendChild(tbody);\r\n    const th1 = document.createElement('th');\r\n    th1.innerText = 'File';\r\n    const th2 = document.createElement('th');\r\n    th2.innerText = 'Lot#';\r\n    const thlast = document.createElement('th');\r\n    thlast.innerText = 'Analysis Date';\r\n    tr.appendChild(th1);\r\n    tr.appendChild(th2);\r\n    console.log(data);\r\n    data.then((data) => {\r\n        if (data !== null) {\r\n            // create th for each Subgroup=SampleInfo unique value of Item\r\n            let sampleInfo = data.filter((row) => row['Subgroup'] === 'SampleInfo').map((row) => row['Item']);\r\n            let headingInfoUnique = [...new Set(sampleInfo)];\r\n            headingInfoUnique.forEach((item) => {\r\n                let th = document.createElement('th');\r\n                th.innerText = item;\r\n                tr.appendChild(th);\r\n            });\r\n            tr.appendChild(thlast);\r\n        }\r\n    });\r\n    return table;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UICreateQCFileTable_1 = require(\"../Tables/UICreateQCFileTable\");\r\nfunction UICreateQCFileTableTest(tableId) {\r\n    const table = document.getElementById(tableId);\r\n    (0, UICreateQCFileTable_1.UICreateQCFileTableDataRows)(table);\r\n}\r\n;\r\nUICreateQCFileTableTest('qcfiletable');\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//import './GetGSheetsDataTest';\r\n//import './UICreateLineGraphTest';\r\nrequire(\"./UICreateQCFileTableTest\");\r\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global[\"@kurkle/color\"] = factory());\n})(this, (function () { 'use strict';\n\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nvar color = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColor: Color,\ndefault: index_esm,\nround: round,\nlim: lim,\np2b: p2b,\nb2p: b2p,\nn2b: n2b,\nb2n: b2n,\nn2p: n2p,\nhexParse: hexParse,\nhexString: hexString,\nrgb2hsl: rgb2hsl,\nhsl2rgb: hsl2rgb,\nhwb2rgb: hwb2rgb,\nhsv2rgb: hsv2rgb,\nhueParse: hueParse,\nrotate: rotate,\nhslString: hslString,\nnameParse: nameParse,\nrgbParse: rgbParse,\nrgbString: rgbString\n});\n\nvar index = Object.assign(index_esm, color);\n\nreturn index;\n\n}));\n","const chartjs = require('../dist/chart.cjs');\nconst {Chart, registerables} = chartjs;\n\nChart.register(...registerables);\n\nmodule.exports = Object.assign(Chart, chartjs);\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\n'use strict';\n\nvar helpers_segment = require('./chunks/helpers.segment.cjs');\nrequire('@kurkle/color');\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = helpers_segment.requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = helpers_segment.color(from || transparent);\n        const c1 = c0.valid && helpers_segment.color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = helpers_segment.resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = helpers_segment.resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = helpers_segment.effects[cfg.easing] || helpers_segment.effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = helpers_segment.resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = helpers_segment.resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!helpers_segment.isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(helpers_segment.defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!helpers_segment.isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (helpers_segment.isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (helpers_segment.isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (helpers_segment.isNumberFinite(otherValue) && (singleMode || value === 0 || helpers_segment.sign(value) === helpers_segment.sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return helpers_segment.createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return helpers_segment.createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = helpers_segment.valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = helpers_segment.valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = helpers_segment.valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            helpers_segment.unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (helpers_segment.isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                helpers_segment.unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                helpers_segment.listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (helpers_segment.isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (helpers_segment.isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(helpers_segment.resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(helpers_segment.resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !helpers_segment.isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (helpers_segment.isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(helpers_segment.valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && helpers_segment.defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(helpers_segment.defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = helpers_segment._arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (helpers_segment.defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (helpers_segment.isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (helpers_segment.isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return helpers_segment.sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(helpers_segment.resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(helpers_segment.resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || helpers_segment.isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (helpers_segment.isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && helpers_segment.sign(value) !== helpers_segment.sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !helpers_segment.isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = helpers_segment.sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = helpers_segment.valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = helpers_segment.valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = helpers_segment.valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += helpers_segment.valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < helpers_segment.TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>helpers_segment._angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>helpers_segment._angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(helpers_segment.HALF_PI, startY, endY);\n        const minX = calcMin(helpers_segment.PI, startX, endX);\n        const minY = calcMin(helpers_segment.PI + helpers_segment.HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (helpers_segment.isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+helpers_segment.resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return helpers_segment.toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return helpers_segment.toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = helpers_segment.TAU;\n        let max = -helpers_segment.TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(helpers_segment.toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = helpers_segment.toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / helpers_segment.TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return helpers_segment.TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = helpers_segment.formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(helpers_segment.valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = helpers_segment._getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (helpers_segment._scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = helpers_segment.isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = helpers_segment.isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = helpers_segment.formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return helpers_segment._parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * helpers_segment.PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? helpers_segment.toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return helpers_segment._parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = helpers_segment._getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (helpers_segment._scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = helpers_segment.isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = helpers_segment.isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? helpers_segment._rlookupByKey : helpers_segment._lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !helpers_segment._isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = helpers_segment.getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (helpers_segment._angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = helpers_segment.getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!helpers_segment.isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (helpers_segment.defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (helpers_segment.defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = helpers_segment.toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        helpers_segment.each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, helpers_segment.toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        helpers_segment.each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = helpers_segment.readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = helpers_segment.readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = helpers_segment.supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = helpers_segment.getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && helpers_segment._getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = helpers_segment.throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = helpers_segment.throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (helpers_segment.isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return helpers_segment.getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = helpers_segment._getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!helpers_segment._isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return helpers_segment.isNumber(this.x) && helpers_segment.isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, helpers_segment.isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, helpers_segment.isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = helpers_segment._factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = helpers_segment.valueOrDefault(majorStart, 0);\n    const end = Math.min(helpers_segment.valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    helpers_segment.each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = helpers_segment.toFont(options.font, fallback);\n    const padding = helpers_segment.toPadding(options.padding);\n    const lines = helpers_segment.isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return helpers_segment.createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return helpers_segment.createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = helpers_segment._toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = helpers_segment._alignStartEnd(align, left, right);\n        if (helpers_segment.isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (helpers_segment.isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = helpers_segment._alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -helpers_segment.HALF_PI : helpers_segment.HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = helpers_segment.finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = helpers_segment.finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = helpers_segment.finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = helpers_segment.finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: helpers_segment.finiteOrDefault(_userMin, _suggestedMin),\n            max: helpers_segment.finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: helpers_segment.isNumberFinite(_userMin),\n            maxDefined: helpers_segment.isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: helpers_segment.finiteOrDefault(min, helpers_segment.finiteOrDefault(max, min)),\n            max: helpers_segment.finiteOrDefault(max, helpers_segment.finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        helpers_segment.callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = helpers_segment._addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        helpers_segment.callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        helpers_segment.callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        helpers_segment.callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        helpers_segment.callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        helpers_segment.callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = helpers_segment.callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        helpers_segment.callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        helpers_segment.callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = helpers_segment._limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = helpers_segment.toDegrees(Math.min(Math.asin(helpers_segment._limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(helpers_segment._limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(helpers_segment._limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        helpers_segment.callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        helpers_segment.callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = helpers_segment.toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        helpers_segment.callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (helpers_segment.isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!helpers_segment.isNullOrUndef(label) && !helpers_segment.isArray(label)) {\n                width = helpers_segment._measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (helpers_segment.isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!helpers_segment.isNullOrUndef(nestedLabel) && !helpers_segment.isArray(nestedLabel)) {\n                        width = helpers_segment._measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return helpers_segment._int16Range(this._alignToPixels ? helpers_segment._alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = helpers_segment.toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return helpers_segment._alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = helpers_segment.valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = helpers_segment._alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -helpers_segment.toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (helpers_segment.isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = helpers_segment.isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = helpers_segment.toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -helpers_segment.toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = helpers_segment._alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = helpers_segment._alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = helpers_segment._alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = helpers_segment._alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            helpers_segment.clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            helpers_segment.renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            helpers_segment.unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = helpers_segment.toFont(title.font);\n        const padding = helpers_segment.toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || helpers_segment.isObject(position)) {\n            offset += padding.bottom;\n            if (helpers_segment.isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        helpers_segment.renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = helpers_segment.valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = helpers_segment.valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return helpers_segment.toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            helpers_segment.defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in helpers_segment.defaults[scope]) {\n            delete helpers_segment.defaults[scope][id];\n            if (this.override) {\n                delete helpers_segment.overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = helpers_segment.merge(Object.create(null), [\n        parentScope ? helpers_segment.defaults.get(parentScope) : {},\n        helpers_segment.defaults.get(scope),\n        item.defaults\n    ]);\n    helpers_segment.defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        helpers_segment.defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        helpers_segment.defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                helpers_segment.each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = helpers_segment._capitalize(method);\n        helpers_segment.callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        helpers_segment.callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (helpers_segment.callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!helpers_segment.isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = helpers_segment.valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = helpers_segment.defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = helpers_segment.overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!helpers_segment.isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), helpers_segment.defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = helpers_segment.mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = helpers_segment.overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            helpers_segment.mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        helpers_segment.mergeIf(scale, [\n            helpers_segment.defaults.scales[scale.type],\n            helpers_segment.defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = helpers_segment.valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = helpers_segment.resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, helpers_segment.descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            helpers_segment.overrides[type] || {},\n            helpers_segment.defaults.datasets[type] || {},\n            {\n                type\n            },\n            helpers_segment.defaults,\n            helpers_segment.descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = helpers_segment.isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = helpers_segment._attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return helpers_segment.isObject(context) ? helpers_segment._attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = helpers_segment._createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>helpers_segment.isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || helpers_segment.isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = helpers_segment._descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (helpers_segment.isFunction(value) || hasFunction(value)) || indexable && helpers_segment.isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    helpers_segment.callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    helpers_segment.callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (helpers_segment._isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = helpers_segment.defaults;\n    static instances = instances;\n    static overrides = helpers_segment.overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = helpers_segment.uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = helpers_segment.debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!helpers_segment.isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            helpers_segment.retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        helpers_segment.clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!helpers_segment.retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        helpers_segment.callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        helpers_segment.each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        helpers_segment.each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = helpers_segment.valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        helpers_segment.each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        helpers_segment.each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = helpers_segment.defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        helpers_segment.each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            helpers_segment.each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        helpers_segment.each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!helpers_segment.setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!helpers_segment.setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        helpers_segment.each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, helpers_segment.isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            helpers_segment.clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            helpers_segment.unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return helpers_segment._isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = helpers_segment.createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (helpers_segment.defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            helpers_segment.clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        helpers_segment.each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        helpers_segment.each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        helpers_segment.each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !helpers_segment._elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = helpers_segment._isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            helpers_segment.callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                helpers_segment.callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !helpers_segment._elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return helpers_segment.each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + helpers_segment.HALF_PI, startAngle - helpers_segment.HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return helpers_segment._readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return helpers_segment._limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: helpers_segment._limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: helpers_segment._limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / helpers_segment.PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + helpers_segment.HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + helpers_segment.HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - helpers_segment.HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - helpers_segment.HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % helpers_segment.TAU || helpers_segment.TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % helpers_segment.TAU || helpers_segment.TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = helpers_segment.getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = helpers_segment.valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= helpers_segment.TAU || helpers_segment._angleBetween(angle, startAngle, endAngle);\n        const withinRadius = helpers_segment._isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > helpers_segment.TAU ? Math.floor(circumference / helpers_segment.TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(helpers_segment.PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = helpers_segment.valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(helpers_segment.valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = helpers_segment.valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = helpers_segment.valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = helpers_segment.valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = helpers_segment.valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return helpers_segment._steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return helpers_segment._bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return helpers_segment._steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return helpers_segment._bezierInterpolation;\n    }\n    return helpers_segment._pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            helpers_segment._updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = helpers_segment._computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = helpers_segment._boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !helpers_segment._isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        helpers_segment.drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : helpers_segment._limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = helpers_segment.toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = helpers_segment.toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || helpers_segment.isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || helpers_segment._isBetween(x, bounds.left, bounds.right)) && (skipY || helpers_segment._isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? helpers_segment.addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!helpers_segment.isNullOrUndef(minIndex) && !helpers_segment.isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = helpers_segment._limitValue(helpers_segment._lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = helpers_segment._limitValue(helpers_segment._lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (helpers_segment.resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (helpers_segment.isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = helpers_segment._boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = helpers_segment._boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = helpers_segment._normalizeAngle(start);\n        end = helpers_segment._normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (helpers_segment.isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!helpers_segment.isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (helpers_segment.isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (helpers_segment.isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (helpers_segment.isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (helpers_segment.isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = helpers_segment.valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (helpers_segment._isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: helpers_segment.TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (helpers_segment.isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (helpers_segment.isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        helpers_segment.clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        helpers_segment.unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = helpers_segment.callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = helpers_segment.toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = helpers_segment.getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = helpers_segment._alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = helpers_segment._alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            helpers_segment.clipArea(ctx, this);\n            this._draw();\n            helpers_segment.unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = helpers_segment.defaults.color;\n        const rtlHelper = helpers_segment.getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = helpers_segment.toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = helpers_segment.valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = helpers_segment.valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = helpers_segment.valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = helpers_segment.valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = helpers_segment.valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = helpers_segment.valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(helpers_segment.valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                helpers_segment.drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = helpers_segment.toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    helpers_segment.addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            helpers_segment.renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: helpers_segment._alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        helpers_segment.overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = helpers_segment._alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = helpers_segment._alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = helpers_segment._textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        helpers_segment.restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = helpers_segment.toFont(titleOpts.font);\n        const titlePadding = helpers_segment.toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = helpers_segment.getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = helpers_segment._alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + helpers_segment._alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = helpers_segment._alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(helpers_segment._toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        helpers_segment.renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = helpers_segment.toFont(titleOpts.font);\n        const titlePadding = helpers_segment.toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (helpers_segment._isBetween(x, this.left, this.right) && helpers_segment._isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (helpers_segment._isBetween(x, hitBox.left, hitBox.left + hitBox.width) && helpers_segment._isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                helpers_segment.callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                helpers_segment.callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            helpers_segment.callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = helpers_segment.toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = helpers_segment.isArray(opts.text) ? opts.text.length : 1;\n        this._padding = helpers_segment.toPadding(opts.padding);\n        const textSize = lineCount * helpers_segment.toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = helpers_segment._alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = helpers_segment._alignStartEnd(align, bottom, top);\n                rotation = helpers_segment.PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = helpers_segment._alignStartEnd(align, top, bottom);\n                rotation = helpers_segment.PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = helpers_segment.toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        helpers_segment.renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: helpers_segment._toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = helpers_segment.distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (helpers_segment.isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = helpers_segment.toFont(options.bodyFont);\n    const titleFont = helpers_segment.toFont(options.titleFont);\n    const footerFont = helpers_segment.toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = helpers_segment.toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    helpers_segment.each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    helpers_segment.each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    helpers_segment.each(body, (bodyItem)=>{\n        helpers_segment.each(bodyItem.before, maxLineWidth);\n        helpers_segment.each(bodyItem.lines, maxLineWidth);\n        helpers_segment.each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    helpers_segment.each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: helpers_segment._limitValue(x, 0, chart.width - size.width),\n        y: helpers_segment._limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = helpers_segment.toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return helpers_segment.createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: helpers_segment.noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: helpers_segment.noop,\n    beforeBody: helpers_segment.noop,\n    beforeLabel: helpers_segment.noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!helpers_segment.isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: helpers_segment.noop,\n    afterBody: helpers_segment.noop,\n    beforeFooter: helpers_segment.noop,\n    footer: helpers_segment.noop,\n    afterFooter: helpers_segment.noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        helpers_segment.each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        helpers_segment.each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = helpers_segment.toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = helpers_segment.toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            helpers_segment.drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            helpers_segment.drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = helpers_segment.isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = helpers_segment.toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                helpers_segment.addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                helpers_segment.addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = helpers_segment.toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        helpers_segment.each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            helpers_segment.each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            helpers_segment.each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        helpers_segment.each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = helpers_segment.getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = helpers_segment.toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = helpers_segment.toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = helpers_segment.toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            helpers_segment.overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            helpers_segment.restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !helpers_segment._elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !helpers_segment._elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : helpers_segment._limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (helpers_segment.isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, helpers_segment.valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !helpers_segment.isNullOrUndef(min);\n    const maxDefined = !helpers_segment.isNullOrUndef(max);\n    const countDefined = !helpers_segment.isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = helpers_segment.niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = helpers_segment.niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!helpers_segment.isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && helpers_segment.almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (helpers_segment.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(helpers_segment._decimalPlaces(spacing), helpers_segment._decimalPlaces(niceMin));\n    factor = Math.pow(10, helpers_segment.isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (helpers_segment.almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && helpers_segment.almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = helpers_segment.toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (helpers_segment.isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = helpers_segment.sign(min);\n            const maxSign = helpers_segment.sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            helpers_segment._setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return helpers_segment.formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: helpers_segment.Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = helpers_segment.isNumberFinite(min) ? min : 0;\n        this.max = helpers_segment.isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = helpers_segment.toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(helpers_segment.log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = helpers_segment.finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = helpers_segment.finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = helpers_segment.finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: helpers_segment.Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return helpers_segment.isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = helpers_segment.isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = helpers_segment.isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !helpers_segment.isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            helpers_segment._setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : helpers_segment.formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = helpers_segment.log10(start);\n        this._valueRange = helpers_segment.log10(this.max) - helpers_segment.log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (helpers_segment.log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = helpers_segment.toPadding(tickOpts.backdropPadding);\n        return helpers_segment.valueOrDefault(tickOpts.font && tickOpts.font.size, helpers_segment.defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = helpers_segment.isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: helpers_segment._longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? helpers_segment.PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = helpers_segment.toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = helpers_segment._normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(helpers_segment.toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(helpers_segment.toDegrees(helpers_segment._normalizeAngle(pointLabelPosition.angle + helpers_segment.HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = helpers_segment._isPointInArea({\n        x: left,\n        y: top\n    }, area) || helpers_segment._isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || helpers_segment._isPointInArea({\n        x: right,\n        y: top\n    }, area) || helpers_segment._isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? helpers_segment.PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!helpers_segment.isNullOrUndef(backdropColor)) {\n        const borderRadius = helpers_segment.toTRBLCorners(opts.borderRadius);\n        const padding = helpers_segment.toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            helpers_segment.addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = helpers_segment.toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        helpers_segment.renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, helpers_segment.TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return helpers_segment.createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: helpers_segment.Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = helpers_segment.toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = helpers_segment.isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = helpers_segment.isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = helpers_segment.callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = helpers_segment.TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return helpers_segment._normalizeAngle(index * angleMultiplier + helpers_segment.toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (helpers_segment.isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (helpers_segment.isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - helpers_segment.HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = helpers_segment.toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = helpers_segment.toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            helpers_segment.renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (helpers_segment.isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!helpers_segment.isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (helpers_segment.isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = helpers_segment._lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        helpers_segment.mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = helpers_segment.isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = helpers_segment.isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = helpers_segment._filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = helpers_segment._limitValue(start, 0, limit);\n        end = helpers_segment._limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = helpers_segment.valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = helpers_segment.isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return helpers_segment.callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = helpers_segment.toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return helpers_segment._arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = helpers_segment._lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = helpers_segment._lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexports.Ticks = helpers_segment.Ticks;\nexports.defaults = helpers_segment.defaults;\nexports.Animation = Animation;\nexports.Animations = Animations;\nexports.ArcElement = ArcElement;\nexports.BarController = BarController;\nexports.BarElement = BarElement;\nexports.BasePlatform = BasePlatform;\nexports.BasicPlatform = BasicPlatform;\nexports.BubbleController = BubbleController;\nexports.CategoryScale = CategoryScale;\nexports.Chart = Chart;\nexports.Colors = plugin_colors;\nexports.DatasetController = DatasetController;\nexports.Decimation = plugin_decimation;\nexports.DomPlatform = DomPlatform;\nexports.DoughnutController = DoughnutController;\nexports.Element = Element;\nexports.Filler = index;\nexports.Interaction = Interaction;\nexports.Legend = plugin_legend;\nexports.LineController = LineController;\nexports.LineElement = LineElement;\nexports.LinearScale = LinearScale;\nexports.LogarithmicScale = LogarithmicScale;\nexports.PieController = PieController;\nexports.PointElement = PointElement;\nexports.PolarAreaController = PolarAreaController;\nexports.RadarController = RadarController;\nexports.RadialLinearScale = RadialLinearScale;\nexports.Scale = Scale;\nexports.ScatterController = ScatterController;\nexports.SubTitle = plugin_subtitle;\nexports.TimeScale = TimeScale;\nexports.TimeSeriesScale = TimeSeriesScale;\nexports.Title = plugin_title;\nexports.Tooltip = plugin_tooltip;\nexports._adapters = adapters;\nexports._detectPlatform = _detectPlatform;\nexports.animator = animator;\nexports.controllers = controllers;\nexports.elements = elements;\nexports.layouts = layouts;\nexports.plugins = plugins;\nexports.registerables = registerables;\nexports.registry = registry;\nexports.scales = scales;\n//# sourceMappingURL=chart.cjs.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\n'use strict';\n\nvar color$1 = require('@kurkle/color');\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new color$1.Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new color$1.Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexports.HALF_PI = HALF_PI;\nexports.INFINITY = INFINITY;\nexports.PI = PI;\nexports.PITAU = PITAU;\nexports.QUARTER_PI = QUARTER_PI;\nexports.RAD_PER_DEG = RAD_PER_DEG;\nexports.TAU = TAU;\nexports.TWO_THIRDS_PI = TWO_THIRDS_PI;\nexports.Ticks = Ticks;\nexports._addGrace = _addGrace;\nexports._alignPixel = _alignPixel;\nexports._alignStartEnd = _alignStartEnd;\nexports._angleBetween = _angleBetween;\nexports._angleDiff = _angleDiff;\nexports._arrayUnique = _arrayUnique;\nexports._attachContext = _attachContext;\nexports._bezierCurveTo = _bezierCurveTo;\nexports._bezierInterpolation = _bezierInterpolation;\nexports._boundSegment = _boundSegment;\nexports._boundSegments = _boundSegments;\nexports._capitalize = _capitalize;\nexports._computeSegments = _computeSegments;\nexports._createResolver = _createResolver;\nexports._decimalPlaces = _decimalPlaces;\nexports._deprecated = _deprecated;\nexports._descriptors = _descriptors;\nexports._elementsEqual = _elementsEqual;\nexports._factorize = _factorize;\nexports._filterBetween = _filterBetween;\nexports._getParentNode = _getParentNode;\nexports._getStartAndCountOfVisiblePoints = _getStartAndCountOfVisiblePoints;\nexports._int16Range = _int16Range;\nexports._isBetween = _isBetween;\nexports._isClickEvent = _isClickEvent;\nexports._isDomSupported = _isDomSupported;\nexports._isPointInArea = _isPointInArea;\nexports._limitValue = _limitValue;\nexports._longestText = _longestText;\nexports._lookup = _lookup;\nexports._lookupByKey = _lookupByKey;\nexports._measureText = _measureText;\nexports._merger = _merger;\nexports._mergerIf = _mergerIf;\nexports._normalizeAngle = _normalizeAngle;\nexports._parseObjectDataRadialScale = _parseObjectDataRadialScale;\nexports._pointInLine = _pointInLine;\nexports._readValueToProps = _readValueToProps;\nexports._rlookupByKey = _rlookupByKey;\nexports._scaleRangesChanged = _scaleRangesChanged;\nexports._setMinAndMaxByKey = _setMinAndMaxByKey;\nexports._splitKey = _splitKey;\nexports._steppedInterpolation = _steppedInterpolation;\nexports._steppedLineTo = _steppedLineTo;\nexports._textX = _textX;\nexports._toLeftRightCenter = _toLeftRightCenter;\nexports._updateBezierControlPoints = _updateBezierControlPoints;\nexports.addRoundedRectPath = addRoundedRectPath;\nexports.almostEquals = almostEquals;\nexports.almostWhole = almostWhole;\nexports.callback = callback;\nexports.clearCanvas = clearCanvas;\nexports.clipArea = clipArea;\nexports.clone = clone;\nexports.color = color;\nexports.createContext = createContext;\nexports.debounce = debounce;\nexports.defaults = defaults;\nexports.defined = defined;\nexports.descriptors = descriptors;\nexports.distanceBetweenPoints = distanceBetweenPoints;\nexports.drawPoint = drawPoint;\nexports.drawPointLegend = drawPointLegend;\nexports.each = each;\nexports.effects = effects;\nexports.finiteOrDefault = finiteOrDefault;\nexports.fontString = fontString;\nexports.formatNumber = formatNumber;\nexports.getAngleFromPoint = getAngleFromPoint;\nexports.getHoverColor = getHoverColor;\nexports.getMaximumSize = getMaximumSize;\nexports.getRelativePosition = getRelativePosition;\nexports.getRtlAdapter = getRtlAdapter;\nexports.getStyle = getStyle;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isNullOrUndef = isNullOrUndef;\nexports.isNumber = isNumber;\nexports.isNumberFinite = isNumberFinite;\nexports.isObject = isObject;\nexports.isPatternOrGradient = isPatternOrGradient;\nexports.listenArrayEvents = listenArrayEvents;\nexports.log10 = log10;\nexports.merge = merge;\nexports.mergeIf = mergeIf;\nexports.niceNum = niceNum;\nexports.noop = noop;\nexports.overrideTextDirection = overrideTextDirection;\nexports.overrides = overrides;\nexports.readUsedSize = readUsedSize;\nexports.renderText = renderText;\nexports.requestAnimFrame = requestAnimFrame;\nexports.resolve = resolve;\nexports.resolveObjectKey = resolveObjectKey;\nexports.restoreTextDirection = restoreTextDirection;\nexports.retinaScale = retinaScale;\nexports.setsEqual = setsEqual;\nexports.sign = sign;\nexports.splineCurve = splineCurve;\nexports.splineCurveMonotone = splineCurveMonotone;\nexports.supportsEventListenerOptions = supportsEventListenerOptions;\nexports.throttled = throttled;\nexports.toDegrees = toDegrees;\nexports.toDimension = toDimension;\nexports.toFont = toFont;\nexports.toFontString = toFontString;\nexports.toLineHeight = toLineHeight;\nexports.toPadding = toPadding;\nexports.toPercentage = toPercentage;\nexports.toRadians = toRadians;\nexports.toTRBL = toTRBL;\nexports.toTRBLCorners = toTRBLCorners;\nexports.uid = uid;\nexports.unclipArea = unclipArea;\nexports.unlistenArrayEvents = unlistenArrayEvents;\nexports.valueOrDefault = valueOrDefault;\n//# sourceMappingURL=helpers.segment.cjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nrequire(\"./scss/styles.scss\");\r\n//import $ from \"jquery\";\r\n// tests\r\nrequire(\"./tests/\");\r\n"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","GetData","testdata_1","DATA","spreadsheetId","sheetname","findGetParameters","key","location","search","substring","split","forEach","item","tmp","parseDataToArrayRows","data","rows","rawRows","values","headers","shift","row","rowData","reduce","acc","cell","index","push","undefined","get_id","get_name","length","response","fetch","mode","json","testData","console","log","error","LoadGSheetsData","__importDefault","mod","__esModule","LineGraph","auto_1","constructor","chartData","UICreateGraphRowHTML","graphId","graphRow","document","createElement","classList","add","titleCol","yTitle","appendChild","graph","canvas","setAttribute","dataSummary","table","UICreateDataStatsTableHTML","titleHTML","tr1","td1_cur","td2_sd","tr2","td3_mean","tr3","td4_cv","stat_meanHTML","stat_curHTML","stat_sdHTML","stat_cvHTML","CreateLineChart","yMin","yMax","xData","yData","ctx","getContext","isHeadingRow","canvasId","target","labels","datasets","map","v","i","pointBackgroundColor","context","dataIndex","pointStyle","default","defaults","plugins","legend","display","elements","line","borderWidth","maintainAspectRatio","point","hitRadius","radius","backgroundColor","type","options","responsive","scales","x","ticks","y","title","min","max","offset","alignToPixels","stepSize","major","enabled","padding","callback","val","num","Number","toFixed","trim","w","measureText","width","grid","interaction","tooltip","callbacks","label","toString","getMean","array","n","a","b","getStandardDeviation","mean","Math","sqrt","pow","getCV","CreateGraphHeader","chart","innerHTML","sd","cv","CreateGraphRow","AddDataPoint","newy","update","UICreateQCFileTableDataRows","UICreateLineGraph_1","GetGSheetsData_1","maxRows","tbody","sampleData","filter","tableRowInfo","tr","td1text_fileNo","padStart","td2text_lotNo","analysisdatesArray","analysisdate","td0","td1","innerText","td2","td3","td4","td5","addEventListener","_a","itemid","fileInfo","container","getElementById","find","fileInfoContainer","entries","graphrowheaderitem","paramerterData","headingRow","id","toLowerCase","replace","s","GraphQCFile","style","backbutton","removeChild","UICreateQCFileTable_1","tableId","UICreateQCFileTableTest","module","round","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexParse","str","ret","len","r","g","hexString","isShort","alpha","HUE_RE","hsl2rgbn","k","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","Z","Y","X","W","V","U","T","S","R","Q","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","parseInt","unpack","transparent","RGB_RE","rgbParse","rgbString","to","from","modHSL","ratio","clone","proto","assign","fromObject","input","Color","charAt","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","freeze","__proto__","b2p","factory","chartjs","Chart","registerables","register","helpers_segment","Animator","_request","_charts","Map","_running","_lastDate","_notify","anims","date","listeners","numSteps","duration","fn","initial","currentStep","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","has","cur","_duration","stop","cancel","remove","delete","animator","interpolators","boolean","factor","c0","number","Animation","cfg","prop","currentValue","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","animation","animatedProps","getOwnPropertyNames","option","properties","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","props","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","applyStack","stack","dsIndex","singleMode","datasetIndex","otherValue","isNumberFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","warn","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","top","right","bottom","left","disabled","toClip","clip","defaultClip","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","parent","createContext","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","_value_","beginAtZero","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","_getStacks","last","skipNull","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","points","iPixel","vPixel","skip","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","spacing","_scriptable","_indexable","startsWith","aspectRatio","generateLabels","text","fillStyle","strokeStyle","borderColor","fontColor","lineWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","showLine","spanGaps","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestCartesianItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","positions","margin","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","includes","_stack","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","tickLength","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","autoSkip","source","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","ArcElement","borderJoinStyle","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","capBezierPoints","_path","_points","_segments","_pointsUpdated","_updateBezierControlPoints","segments","_computeSegments","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","skipX","skipY","bounds","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","boundingRects","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_getTarget","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","itemWidth","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","addedLabels","addIfString","lastIndexOf","findOrAddLabel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","tickValue","generateTicks$1","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","logarithmic","_zero","minExp","exp","startExp","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","_longestText","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","_adapters","color$1","defaultValue","dimension","endsWith","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","keyResolvers","_splitKey","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","_angleDiff","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","requestAnimationFrame","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","JSON","stringify","Intl","NumberFormat","getNumberFormat","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","parentContext","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","round1","passiveSupported","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","readStyle","styleChanged","prevStyle","replacer","minmax","keepZero","halfWidth","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","flip","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","cp1","cp2","sub","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_deprecated","a0","a1","arrayOfThings","thing","nestedThing","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","midpoint","controlPoints","inArea","inAreaPrev","inAreaNext","rounded","resetTransform","clearRect","timeout","clearTimeout","setTimeout","loopable","pixelSize","fontStyle","fontFamily","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","bbWidth","bbHeight","containerSize","getBoundingClientRect","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","borders","paddings","borderBox","touches","shadowRoot","useOffsetPos","clientX","clientY","getCanvasPosition","rectX","getRightToLeftAdapter","_itemWidth","_chartjs","object","roundedRange","niceRange","fraction","direction","original","getPropertyPriority","setProperty","prevTextDirection","setRenderOpts","strokeText","inputs","info","cacheable","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","argsToUse","ticking","radians","degrees","stub","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}